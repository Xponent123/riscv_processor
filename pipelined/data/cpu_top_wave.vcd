$date
	Sat Mar  8 14:59:01 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module cpu_tb $end
$var reg 1 ! clk $end
$var reg 1 " reset $end
$scope module uut $end
$var wire 1 # PC_Src $end
$var wire 1 ! clk $end
$var wire 1 $ flush $end
$var wire 1 " reset $end
$var wire 1 % zero $end
$var wire 5 & rs2 [4:0] $end
$var wire 5 ' rs1 [4:0] $end
$var wire 5 ( rd [4:0] $end
$var wire 64 ) pc_plus4 [63:0] $end
$var wire 64 * pc_next [63:0] $end
$var wire 7 + opcode [6:0] $end
$var wire 7 , funct7 [6:0] $end
$var wire 3 - funct3 [2:0] $end
$var wire 1 . bit30 $end
$var wire 64 / alu_in2 [63:0] $end
$var wire 64 0 WB_WriteData [63:0] $end
$var wire 1 1 WB_RegWrite $end
$var wire 5 2 WB_Rd [4:0] $end
$var wire 1 3 WB_MemtoReg $end
$var wire 64 4 WB_MemReadData [63:0] $end
$var wire 64 5 WB_Alu_result [63:0] $end
$var wire 1 6 RegWrite $end
$var wire 64 7 RegData2 [63:0] $end
$var wire 64 8 RegData1 [63:0] $end
$var wire 1 9 PCWrite $end
$var wire 1 : MemtoReg $end
$var wire 1 ; MemWrite $end
$var wire 64 < MemReadData [63:0] $end
$var wire 1 = MemRead $end
$var wire 1 > MEM_RegWrite $end
$var wire 64 ? MEM_RegData2 [63:0] $end
$var wire 5 @ MEM_Rd [4:0] $end
$var wire 64 A MEM_PC [63:0] $end
$var wire 1 B MEM_MemtoReg $end
$var wire 1 C MEM_MemWrite $end
$var wire 1 D MEM_MemRead $end
$var wire 1 E MEM_Branch $end
$var wire 1 F MEM_Alu_zero $end
$var wire 64 G MEM_ALU_result [63:0] $end
$var wire 64 H Imm [63:0] $end
$var wire 32 I IF_instruction [31:0] $end
$var wire 1 J IF_ID_reg_write $end
$var wire 64 K ID_pc [63:0] $end
$var wire 32 L ID_instruction [31:0] $end
$var wire 2 M ForwardB [1:0] $end
$var wire 2 N ForwardA [1:0] $end
$var wire 64 O EX_pc_branch [63:0] $end
$var wire 64 P EX_pc [63:0] $end
$var wire 5 Q EX_Rs2 [4:0] $end
$var wire 5 R EX_Rs1 [4:0] $end
$var wire 1 S EX_RegWrite $end
$var wire 64 T EX_RegData2 [63:0] $end
$var wire 64 U EX_RegData1 [63:0] $end
$var wire 5 V EX_Rd [4:0] $end
$var wire 1 W EX_MemtoReg $end
$var wire 1 X EX_MemWrite $end
$var wire 1 Y EX_MemRead $end
$var wire 64 Z EX_Imm [63:0] $end
$var wire 3 [ EX_Funct3 [2:0] $end
$var wire 1 \ EX_Branch $end
$var wire 1 ] EX_Bit30 $end
$var wire 1 ^ EX_ALUSrc $end
$var wire 2 _ EX_ALUOp [1:0] $end
$var wire 1 ` ControlStall $end
$var wire 1 a Branch $end
$var wire 64 b ALU_result [63:0] $end
$var wire 64 c ALU_IN2 [63:0] $end
$var wire 64 d ALU_IN1 [63:0] $end
$var wire 1 e ALUSrc $end
$var wire 2 f ALUOp [1:0] $end
$var wire 4 g ALUControl [3:0] $end
$var reg 2 h ALUOp_reg [1:0] $end
$var reg 1 i ALUSrc_reg $end
$var reg 1 j Branch_reg $end
$var reg 1 k MemRead_reg $end
$var reg 1 l MemWrite_reg $end
$var reg 1 m MemtoReg_reg $end
$var reg 1 n RegWrite_reg $end
$var reg 64 o pc [63:0] $end
$scope module alu_ctrl $end
$var wire 4 p D0 [3:0] $end
$var wire 4 q D1 [3:0] $end
$var wire 1 r D2_0 $end
$var wire 1 s D2_1 $end
$var wire 1 t D2_2 $end
$var wire 1 u D2_2_is000 $end
$var wire 1 v D2_3 $end
$var wire 1 w is_000 $end
$var wire 1 x is_110 $end
$var wire 1 y is_111 $end
$var wire 1 z n_f3_0 $end
$var wire 1 { n_f3_1 $end
$var wire 1 | n_f3_2 $end
$var wire 1 } or_temp $end
$var wire 1 ~ or_temp1 $end
$var wire 1 !" sel_default $end
$var wire 3 "" funct3 [2:0] $end
$var wire 1 #" f3_2 $end
$var wire 1 $" f3_1 $end
$var wire 1 %" f3_0 $end
$var wire 1 ] bit30 $end
$var wire 4 &" D2 [3:0] $end
$var wire 2 '" ALU_op [1:0] $end
$var wire 4 (" ALUControl [3:0] $end
$scope module mux_inst $end
$var wire 4 )" in0 [3:0] $end
$var wire 4 *" in1 [3:0] $end
$var wire 4 +" in2 [3:0] $end
$var wire 1 ," s0 $end
$var wire 1 -" s1 $end
$var wire 1 ." s2 $end
$var wire 1 /" s_default $end
$var wire 2 0" sel [1:0] $end
$var wire 4 1" out [3:0] $end
$scope begin mux_loop[0] $end
$var wire 1 2" a $end
$var wire 1 3" b $end
$var wire 1 4" c $end
$var wire 1 5" d $end
$upscope $end
$scope begin mux_loop[1] $end
$var wire 1 6" a $end
$var wire 1 7" b $end
$var wire 1 8" c $end
$var wire 1 9" d $end
$upscope $end
$scope begin mux_loop[2] $end
$var wire 1 :" a $end
$var wire 1 ;" b $end
$var wire 1 <" c $end
$var wire 1 =" d $end
$upscope $end
$scope begin mux_loop[3] $end
$var wire 1 >" a $end
$var wire 1 ?" b $end
$var wire 1 @" c $end
$var wire 1 A" d $end
$upscope $end
$upscope $end
$upscope $end
$scope module alu_inst $end
$var wire 4 B" alu_control [3:0] $end
$var wire 64 C" rs1 [63:0] $end
$var wire 64 D" rs2 [63:0] $end
$var wire 64 E" sub_result [63:0] $end
$var wire 1 F" sub_cout $end
$var wire 64 G" or_result [63:0] $end
$var wire 64 H" and_result [63:0] $end
$var wire 1 % alu_zero $end
$var wire 64 I" add_result [63:0] $end
$var wire 1 J" add_cout $end
$var reg 64 K" rd [63:0] $end
$scope module u_add $end
$var wire 64 L" A [63:0] $end
$var wire 64 M" B [63:0] $end
$var wire 1 N" Cin $end
$var wire 64 O" Result [63:0] $end
$var wire 64 P" sum [63:0] $end
$var wire 65 Q" carry [64:0] $end
$var wire 1 J" Cout $end
$scope begin adder_loop[0] $end
$scope module fa $end
$var wire 1 R" A $end
$var wire 1 S" AB $end
$var wire 1 T" ACin $end
$var wire 1 U" AxorB $end
$var wire 1 V" B $end
$var wire 1 W" BCin $end
$var wire 1 X" Cin $end
$var wire 1 Y" Cout $end
$var wire 1 Z" Sum $end
$upscope $end
$upscope $end
$scope begin adder_loop[1] $end
$scope module fa $end
$var wire 1 [" A $end
$var wire 1 \" AB $end
$var wire 1 ]" ACin $end
$var wire 1 ^" AxorB $end
$var wire 1 _" B $end
$var wire 1 `" BCin $end
$var wire 1 a" Cin $end
$var wire 1 b" Cout $end
$var wire 1 c" Sum $end
$upscope $end
$upscope $end
$scope begin adder_loop[2] $end
$scope module fa $end
$var wire 1 d" A $end
$var wire 1 e" AB $end
$var wire 1 f" ACin $end
$var wire 1 g" AxorB $end
$var wire 1 h" B $end
$var wire 1 i" BCin $end
$var wire 1 j" Cin $end
$var wire 1 k" Cout $end
$var wire 1 l" Sum $end
$upscope $end
$upscope $end
$scope begin adder_loop[3] $end
$scope module fa $end
$var wire 1 m" A $end
$var wire 1 n" AB $end
$var wire 1 o" ACin $end
$var wire 1 p" AxorB $end
$var wire 1 q" B $end
$var wire 1 r" BCin $end
$var wire 1 s" Cin $end
$var wire 1 t" Cout $end
$var wire 1 u" Sum $end
$upscope $end
$upscope $end
$scope begin adder_loop[4] $end
$scope module fa $end
$var wire 1 v" A $end
$var wire 1 w" AB $end
$var wire 1 x" ACin $end
$var wire 1 y" AxorB $end
$var wire 1 z" B $end
$var wire 1 {" BCin $end
$var wire 1 |" Cin $end
$var wire 1 }" Cout $end
$var wire 1 ~" Sum $end
$upscope $end
$upscope $end
$scope begin adder_loop[5] $end
$scope module fa $end
$var wire 1 !# A $end
$var wire 1 "# AB $end
$var wire 1 ## ACin $end
$var wire 1 $# AxorB $end
$var wire 1 %# B $end
$var wire 1 &# BCin $end
$var wire 1 '# Cin $end
$var wire 1 (# Cout $end
$var wire 1 )# Sum $end
$upscope $end
$upscope $end
$scope begin adder_loop[6] $end
$scope module fa $end
$var wire 1 *# A $end
$var wire 1 +# AB $end
$var wire 1 ,# ACin $end
$var wire 1 -# AxorB $end
$var wire 1 .# B $end
$var wire 1 /# BCin $end
$var wire 1 0# Cin $end
$var wire 1 1# Cout $end
$var wire 1 2# Sum $end
$upscope $end
$upscope $end
$scope begin adder_loop[7] $end
$scope module fa $end
$var wire 1 3# A $end
$var wire 1 4# AB $end
$var wire 1 5# ACin $end
$var wire 1 6# AxorB $end
$var wire 1 7# B $end
$var wire 1 8# BCin $end
$var wire 1 9# Cin $end
$var wire 1 :# Cout $end
$var wire 1 ;# Sum $end
$upscope $end
$upscope $end
$scope begin adder_loop[8] $end
$scope module fa $end
$var wire 1 <# A $end
$var wire 1 =# AB $end
$var wire 1 ># ACin $end
$var wire 1 ?# AxorB $end
$var wire 1 @# B $end
$var wire 1 A# BCin $end
$var wire 1 B# Cin $end
$var wire 1 C# Cout $end
$var wire 1 D# Sum $end
$upscope $end
$upscope $end
$scope begin adder_loop[9] $end
$scope module fa $end
$var wire 1 E# A $end
$var wire 1 F# AB $end
$var wire 1 G# ACin $end
$var wire 1 H# AxorB $end
$var wire 1 I# B $end
$var wire 1 J# BCin $end
$var wire 1 K# Cin $end
$var wire 1 L# Cout $end
$var wire 1 M# Sum $end
$upscope $end
$upscope $end
$scope begin adder_loop[10] $end
$scope module fa $end
$var wire 1 N# A $end
$var wire 1 O# AB $end
$var wire 1 P# ACin $end
$var wire 1 Q# AxorB $end
$var wire 1 R# B $end
$var wire 1 S# BCin $end
$var wire 1 T# Cin $end
$var wire 1 U# Cout $end
$var wire 1 V# Sum $end
$upscope $end
$upscope $end
$scope begin adder_loop[11] $end
$scope module fa $end
$var wire 1 W# A $end
$var wire 1 X# AB $end
$var wire 1 Y# ACin $end
$var wire 1 Z# AxorB $end
$var wire 1 [# B $end
$var wire 1 \# BCin $end
$var wire 1 ]# Cin $end
$var wire 1 ^# Cout $end
$var wire 1 _# Sum $end
$upscope $end
$upscope $end
$scope begin adder_loop[12] $end
$scope module fa $end
$var wire 1 `# A $end
$var wire 1 a# AB $end
$var wire 1 b# ACin $end
$var wire 1 c# AxorB $end
$var wire 1 d# B $end
$var wire 1 e# BCin $end
$var wire 1 f# Cin $end
$var wire 1 g# Cout $end
$var wire 1 h# Sum $end
$upscope $end
$upscope $end
$scope begin adder_loop[13] $end
$scope module fa $end
$var wire 1 i# A $end
$var wire 1 j# AB $end
$var wire 1 k# ACin $end
$var wire 1 l# AxorB $end
$var wire 1 m# B $end
$var wire 1 n# BCin $end
$var wire 1 o# Cin $end
$var wire 1 p# Cout $end
$var wire 1 q# Sum $end
$upscope $end
$upscope $end
$scope begin adder_loop[14] $end
$scope module fa $end
$var wire 1 r# A $end
$var wire 1 s# AB $end
$var wire 1 t# ACin $end
$var wire 1 u# AxorB $end
$var wire 1 v# B $end
$var wire 1 w# BCin $end
$var wire 1 x# Cin $end
$var wire 1 y# Cout $end
$var wire 1 z# Sum $end
$upscope $end
$upscope $end
$scope begin adder_loop[15] $end
$scope module fa $end
$var wire 1 {# A $end
$var wire 1 |# AB $end
$var wire 1 }# ACin $end
$var wire 1 ~# AxorB $end
$var wire 1 !$ B $end
$var wire 1 "$ BCin $end
$var wire 1 #$ Cin $end
$var wire 1 $$ Cout $end
$var wire 1 %$ Sum $end
$upscope $end
$upscope $end
$scope begin adder_loop[16] $end
$scope module fa $end
$var wire 1 &$ A $end
$var wire 1 '$ AB $end
$var wire 1 ($ ACin $end
$var wire 1 )$ AxorB $end
$var wire 1 *$ B $end
$var wire 1 +$ BCin $end
$var wire 1 ,$ Cin $end
$var wire 1 -$ Cout $end
$var wire 1 .$ Sum $end
$upscope $end
$upscope $end
$scope begin adder_loop[17] $end
$scope module fa $end
$var wire 1 /$ A $end
$var wire 1 0$ AB $end
$var wire 1 1$ ACin $end
$var wire 1 2$ AxorB $end
$var wire 1 3$ B $end
$var wire 1 4$ BCin $end
$var wire 1 5$ Cin $end
$var wire 1 6$ Cout $end
$var wire 1 7$ Sum $end
$upscope $end
$upscope $end
$scope begin adder_loop[18] $end
$scope module fa $end
$var wire 1 8$ A $end
$var wire 1 9$ AB $end
$var wire 1 :$ ACin $end
$var wire 1 ;$ AxorB $end
$var wire 1 <$ B $end
$var wire 1 =$ BCin $end
$var wire 1 >$ Cin $end
$var wire 1 ?$ Cout $end
$var wire 1 @$ Sum $end
$upscope $end
$upscope $end
$scope begin adder_loop[19] $end
$scope module fa $end
$var wire 1 A$ A $end
$var wire 1 B$ AB $end
$var wire 1 C$ ACin $end
$var wire 1 D$ AxorB $end
$var wire 1 E$ B $end
$var wire 1 F$ BCin $end
$var wire 1 G$ Cin $end
$var wire 1 H$ Cout $end
$var wire 1 I$ Sum $end
$upscope $end
$upscope $end
$scope begin adder_loop[20] $end
$scope module fa $end
$var wire 1 J$ A $end
$var wire 1 K$ AB $end
$var wire 1 L$ ACin $end
$var wire 1 M$ AxorB $end
$var wire 1 N$ B $end
$var wire 1 O$ BCin $end
$var wire 1 P$ Cin $end
$var wire 1 Q$ Cout $end
$var wire 1 R$ Sum $end
$upscope $end
$upscope $end
$scope begin adder_loop[21] $end
$scope module fa $end
$var wire 1 S$ A $end
$var wire 1 T$ AB $end
$var wire 1 U$ ACin $end
$var wire 1 V$ AxorB $end
$var wire 1 W$ B $end
$var wire 1 X$ BCin $end
$var wire 1 Y$ Cin $end
$var wire 1 Z$ Cout $end
$var wire 1 [$ Sum $end
$upscope $end
$upscope $end
$scope begin adder_loop[22] $end
$scope module fa $end
$var wire 1 \$ A $end
$var wire 1 ]$ AB $end
$var wire 1 ^$ ACin $end
$var wire 1 _$ AxorB $end
$var wire 1 `$ B $end
$var wire 1 a$ BCin $end
$var wire 1 b$ Cin $end
$var wire 1 c$ Cout $end
$var wire 1 d$ Sum $end
$upscope $end
$upscope $end
$scope begin adder_loop[23] $end
$scope module fa $end
$var wire 1 e$ A $end
$var wire 1 f$ AB $end
$var wire 1 g$ ACin $end
$var wire 1 h$ AxorB $end
$var wire 1 i$ B $end
$var wire 1 j$ BCin $end
$var wire 1 k$ Cin $end
$var wire 1 l$ Cout $end
$var wire 1 m$ Sum $end
$upscope $end
$upscope $end
$scope begin adder_loop[24] $end
$scope module fa $end
$var wire 1 n$ A $end
$var wire 1 o$ AB $end
$var wire 1 p$ ACin $end
$var wire 1 q$ AxorB $end
$var wire 1 r$ B $end
$var wire 1 s$ BCin $end
$var wire 1 t$ Cin $end
$var wire 1 u$ Cout $end
$var wire 1 v$ Sum $end
$upscope $end
$upscope $end
$scope begin adder_loop[25] $end
$scope module fa $end
$var wire 1 w$ A $end
$var wire 1 x$ AB $end
$var wire 1 y$ ACin $end
$var wire 1 z$ AxorB $end
$var wire 1 {$ B $end
$var wire 1 |$ BCin $end
$var wire 1 }$ Cin $end
$var wire 1 ~$ Cout $end
$var wire 1 !% Sum $end
$upscope $end
$upscope $end
$scope begin adder_loop[26] $end
$scope module fa $end
$var wire 1 "% A $end
$var wire 1 #% AB $end
$var wire 1 $% ACin $end
$var wire 1 %% AxorB $end
$var wire 1 &% B $end
$var wire 1 '% BCin $end
$var wire 1 (% Cin $end
$var wire 1 )% Cout $end
$var wire 1 *% Sum $end
$upscope $end
$upscope $end
$scope begin adder_loop[27] $end
$scope module fa $end
$var wire 1 +% A $end
$var wire 1 ,% AB $end
$var wire 1 -% ACin $end
$var wire 1 .% AxorB $end
$var wire 1 /% B $end
$var wire 1 0% BCin $end
$var wire 1 1% Cin $end
$var wire 1 2% Cout $end
$var wire 1 3% Sum $end
$upscope $end
$upscope $end
$scope begin adder_loop[28] $end
$scope module fa $end
$var wire 1 4% A $end
$var wire 1 5% AB $end
$var wire 1 6% ACin $end
$var wire 1 7% AxorB $end
$var wire 1 8% B $end
$var wire 1 9% BCin $end
$var wire 1 :% Cin $end
$var wire 1 ;% Cout $end
$var wire 1 <% Sum $end
$upscope $end
$upscope $end
$scope begin adder_loop[29] $end
$scope module fa $end
$var wire 1 =% A $end
$var wire 1 >% AB $end
$var wire 1 ?% ACin $end
$var wire 1 @% AxorB $end
$var wire 1 A% B $end
$var wire 1 B% BCin $end
$var wire 1 C% Cin $end
$var wire 1 D% Cout $end
$var wire 1 E% Sum $end
$upscope $end
$upscope $end
$scope begin adder_loop[30] $end
$scope module fa $end
$var wire 1 F% A $end
$var wire 1 G% AB $end
$var wire 1 H% ACin $end
$var wire 1 I% AxorB $end
$var wire 1 J% B $end
$var wire 1 K% BCin $end
$var wire 1 L% Cin $end
$var wire 1 M% Cout $end
$var wire 1 N% Sum $end
$upscope $end
$upscope $end
$scope begin adder_loop[31] $end
$scope module fa $end
$var wire 1 O% A $end
$var wire 1 P% AB $end
$var wire 1 Q% ACin $end
$var wire 1 R% AxorB $end
$var wire 1 S% B $end
$var wire 1 T% BCin $end
$var wire 1 U% Cin $end
$var wire 1 V% Cout $end
$var wire 1 W% Sum $end
$upscope $end
$upscope $end
$scope begin adder_loop[32] $end
$scope module fa $end
$var wire 1 X% A $end
$var wire 1 Y% AB $end
$var wire 1 Z% ACin $end
$var wire 1 [% AxorB $end
$var wire 1 \% B $end
$var wire 1 ]% BCin $end
$var wire 1 ^% Cin $end
$var wire 1 _% Cout $end
$var wire 1 `% Sum $end
$upscope $end
$upscope $end
$scope begin adder_loop[33] $end
$scope module fa $end
$var wire 1 a% A $end
$var wire 1 b% AB $end
$var wire 1 c% ACin $end
$var wire 1 d% AxorB $end
$var wire 1 e% B $end
$var wire 1 f% BCin $end
$var wire 1 g% Cin $end
$var wire 1 h% Cout $end
$var wire 1 i% Sum $end
$upscope $end
$upscope $end
$scope begin adder_loop[34] $end
$scope module fa $end
$var wire 1 j% A $end
$var wire 1 k% AB $end
$var wire 1 l% ACin $end
$var wire 1 m% AxorB $end
$var wire 1 n% B $end
$var wire 1 o% BCin $end
$var wire 1 p% Cin $end
$var wire 1 q% Cout $end
$var wire 1 r% Sum $end
$upscope $end
$upscope $end
$scope begin adder_loop[35] $end
$scope module fa $end
$var wire 1 s% A $end
$var wire 1 t% AB $end
$var wire 1 u% ACin $end
$var wire 1 v% AxorB $end
$var wire 1 w% B $end
$var wire 1 x% BCin $end
$var wire 1 y% Cin $end
$var wire 1 z% Cout $end
$var wire 1 {% Sum $end
$upscope $end
$upscope $end
$scope begin adder_loop[36] $end
$scope module fa $end
$var wire 1 |% A $end
$var wire 1 }% AB $end
$var wire 1 ~% ACin $end
$var wire 1 !& AxorB $end
$var wire 1 "& B $end
$var wire 1 #& BCin $end
$var wire 1 $& Cin $end
$var wire 1 %& Cout $end
$var wire 1 && Sum $end
$upscope $end
$upscope $end
$scope begin adder_loop[37] $end
$scope module fa $end
$var wire 1 '& A $end
$var wire 1 (& AB $end
$var wire 1 )& ACin $end
$var wire 1 *& AxorB $end
$var wire 1 +& B $end
$var wire 1 ,& BCin $end
$var wire 1 -& Cin $end
$var wire 1 .& Cout $end
$var wire 1 /& Sum $end
$upscope $end
$upscope $end
$scope begin adder_loop[38] $end
$scope module fa $end
$var wire 1 0& A $end
$var wire 1 1& AB $end
$var wire 1 2& ACin $end
$var wire 1 3& AxorB $end
$var wire 1 4& B $end
$var wire 1 5& BCin $end
$var wire 1 6& Cin $end
$var wire 1 7& Cout $end
$var wire 1 8& Sum $end
$upscope $end
$upscope $end
$scope begin adder_loop[39] $end
$scope module fa $end
$var wire 1 9& A $end
$var wire 1 :& AB $end
$var wire 1 ;& ACin $end
$var wire 1 <& AxorB $end
$var wire 1 =& B $end
$var wire 1 >& BCin $end
$var wire 1 ?& Cin $end
$var wire 1 @& Cout $end
$var wire 1 A& Sum $end
$upscope $end
$upscope $end
$scope begin adder_loop[40] $end
$scope module fa $end
$var wire 1 B& A $end
$var wire 1 C& AB $end
$var wire 1 D& ACin $end
$var wire 1 E& AxorB $end
$var wire 1 F& B $end
$var wire 1 G& BCin $end
$var wire 1 H& Cin $end
$var wire 1 I& Cout $end
$var wire 1 J& Sum $end
$upscope $end
$upscope $end
$scope begin adder_loop[41] $end
$scope module fa $end
$var wire 1 K& A $end
$var wire 1 L& AB $end
$var wire 1 M& ACin $end
$var wire 1 N& AxorB $end
$var wire 1 O& B $end
$var wire 1 P& BCin $end
$var wire 1 Q& Cin $end
$var wire 1 R& Cout $end
$var wire 1 S& Sum $end
$upscope $end
$upscope $end
$scope begin adder_loop[42] $end
$scope module fa $end
$var wire 1 T& A $end
$var wire 1 U& AB $end
$var wire 1 V& ACin $end
$var wire 1 W& AxorB $end
$var wire 1 X& B $end
$var wire 1 Y& BCin $end
$var wire 1 Z& Cin $end
$var wire 1 [& Cout $end
$var wire 1 \& Sum $end
$upscope $end
$upscope $end
$scope begin adder_loop[43] $end
$scope module fa $end
$var wire 1 ]& A $end
$var wire 1 ^& AB $end
$var wire 1 _& ACin $end
$var wire 1 `& AxorB $end
$var wire 1 a& B $end
$var wire 1 b& BCin $end
$var wire 1 c& Cin $end
$var wire 1 d& Cout $end
$var wire 1 e& Sum $end
$upscope $end
$upscope $end
$scope begin adder_loop[44] $end
$scope module fa $end
$var wire 1 f& A $end
$var wire 1 g& AB $end
$var wire 1 h& ACin $end
$var wire 1 i& AxorB $end
$var wire 1 j& B $end
$var wire 1 k& BCin $end
$var wire 1 l& Cin $end
$var wire 1 m& Cout $end
$var wire 1 n& Sum $end
$upscope $end
$upscope $end
$scope begin adder_loop[45] $end
$scope module fa $end
$var wire 1 o& A $end
$var wire 1 p& AB $end
$var wire 1 q& ACin $end
$var wire 1 r& AxorB $end
$var wire 1 s& B $end
$var wire 1 t& BCin $end
$var wire 1 u& Cin $end
$var wire 1 v& Cout $end
$var wire 1 w& Sum $end
$upscope $end
$upscope $end
$scope begin adder_loop[46] $end
$scope module fa $end
$var wire 1 x& A $end
$var wire 1 y& AB $end
$var wire 1 z& ACin $end
$var wire 1 {& AxorB $end
$var wire 1 |& B $end
$var wire 1 }& BCin $end
$var wire 1 ~& Cin $end
$var wire 1 !' Cout $end
$var wire 1 "' Sum $end
$upscope $end
$upscope $end
$scope begin adder_loop[47] $end
$scope module fa $end
$var wire 1 #' A $end
$var wire 1 $' AB $end
$var wire 1 %' ACin $end
$var wire 1 &' AxorB $end
$var wire 1 '' B $end
$var wire 1 (' BCin $end
$var wire 1 )' Cin $end
$var wire 1 *' Cout $end
$var wire 1 +' Sum $end
$upscope $end
$upscope $end
$scope begin adder_loop[48] $end
$scope module fa $end
$var wire 1 ,' A $end
$var wire 1 -' AB $end
$var wire 1 .' ACin $end
$var wire 1 /' AxorB $end
$var wire 1 0' B $end
$var wire 1 1' BCin $end
$var wire 1 2' Cin $end
$var wire 1 3' Cout $end
$var wire 1 4' Sum $end
$upscope $end
$upscope $end
$scope begin adder_loop[49] $end
$scope module fa $end
$var wire 1 5' A $end
$var wire 1 6' AB $end
$var wire 1 7' ACin $end
$var wire 1 8' AxorB $end
$var wire 1 9' B $end
$var wire 1 :' BCin $end
$var wire 1 ;' Cin $end
$var wire 1 <' Cout $end
$var wire 1 =' Sum $end
$upscope $end
$upscope $end
$scope begin adder_loop[50] $end
$scope module fa $end
$var wire 1 >' A $end
$var wire 1 ?' AB $end
$var wire 1 @' ACin $end
$var wire 1 A' AxorB $end
$var wire 1 B' B $end
$var wire 1 C' BCin $end
$var wire 1 D' Cin $end
$var wire 1 E' Cout $end
$var wire 1 F' Sum $end
$upscope $end
$upscope $end
$scope begin adder_loop[51] $end
$scope module fa $end
$var wire 1 G' A $end
$var wire 1 H' AB $end
$var wire 1 I' ACin $end
$var wire 1 J' AxorB $end
$var wire 1 K' B $end
$var wire 1 L' BCin $end
$var wire 1 M' Cin $end
$var wire 1 N' Cout $end
$var wire 1 O' Sum $end
$upscope $end
$upscope $end
$scope begin adder_loop[52] $end
$scope module fa $end
$var wire 1 P' A $end
$var wire 1 Q' AB $end
$var wire 1 R' ACin $end
$var wire 1 S' AxorB $end
$var wire 1 T' B $end
$var wire 1 U' BCin $end
$var wire 1 V' Cin $end
$var wire 1 W' Cout $end
$var wire 1 X' Sum $end
$upscope $end
$upscope $end
$scope begin adder_loop[53] $end
$scope module fa $end
$var wire 1 Y' A $end
$var wire 1 Z' AB $end
$var wire 1 [' ACin $end
$var wire 1 \' AxorB $end
$var wire 1 ]' B $end
$var wire 1 ^' BCin $end
$var wire 1 _' Cin $end
$var wire 1 `' Cout $end
$var wire 1 a' Sum $end
$upscope $end
$upscope $end
$scope begin adder_loop[54] $end
$scope module fa $end
$var wire 1 b' A $end
$var wire 1 c' AB $end
$var wire 1 d' ACin $end
$var wire 1 e' AxorB $end
$var wire 1 f' B $end
$var wire 1 g' BCin $end
$var wire 1 h' Cin $end
$var wire 1 i' Cout $end
$var wire 1 j' Sum $end
$upscope $end
$upscope $end
$scope begin adder_loop[55] $end
$scope module fa $end
$var wire 1 k' A $end
$var wire 1 l' AB $end
$var wire 1 m' ACin $end
$var wire 1 n' AxorB $end
$var wire 1 o' B $end
$var wire 1 p' BCin $end
$var wire 1 q' Cin $end
$var wire 1 r' Cout $end
$var wire 1 s' Sum $end
$upscope $end
$upscope $end
$scope begin adder_loop[56] $end
$scope module fa $end
$var wire 1 t' A $end
$var wire 1 u' AB $end
$var wire 1 v' ACin $end
$var wire 1 w' AxorB $end
$var wire 1 x' B $end
$var wire 1 y' BCin $end
$var wire 1 z' Cin $end
$var wire 1 {' Cout $end
$var wire 1 |' Sum $end
$upscope $end
$upscope $end
$scope begin adder_loop[57] $end
$scope module fa $end
$var wire 1 }' A $end
$var wire 1 ~' AB $end
$var wire 1 !( ACin $end
$var wire 1 "( AxorB $end
$var wire 1 #( B $end
$var wire 1 $( BCin $end
$var wire 1 %( Cin $end
$var wire 1 &( Cout $end
$var wire 1 '( Sum $end
$upscope $end
$upscope $end
$scope begin adder_loop[58] $end
$scope module fa $end
$var wire 1 (( A $end
$var wire 1 )( AB $end
$var wire 1 *( ACin $end
$var wire 1 +( AxorB $end
$var wire 1 ,( B $end
$var wire 1 -( BCin $end
$var wire 1 .( Cin $end
$var wire 1 /( Cout $end
$var wire 1 0( Sum $end
$upscope $end
$upscope $end
$scope begin adder_loop[59] $end
$scope module fa $end
$var wire 1 1( A $end
$var wire 1 2( AB $end
$var wire 1 3( ACin $end
$var wire 1 4( AxorB $end
$var wire 1 5( B $end
$var wire 1 6( BCin $end
$var wire 1 7( Cin $end
$var wire 1 8( Cout $end
$var wire 1 9( Sum $end
$upscope $end
$upscope $end
$scope begin adder_loop[60] $end
$scope module fa $end
$var wire 1 :( A $end
$var wire 1 ;( AB $end
$var wire 1 <( ACin $end
$var wire 1 =( AxorB $end
$var wire 1 >( B $end
$var wire 1 ?( BCin $end
$var wire 1 @( Cin $end
$var wire 1 A( Cout $end
$var wire 1 B( Sum $end
$upscope $end
$upscope $end
$scope begin adder_loop[61] $end
$scope module fa $end
$var wire 1 C( A $end
$var wire 1 D( AB $end
$var wire 1 E( ACin $end
$var wire 1 F( AxorB $end
$var wire 1 G( B $end
$var wire 1 H( BCin $end
$var wire 1 I( Cin $end
$var wire 1 J( Cout $end
$var wire 1 K( Sum $end
$upscope $end
$upscope $end
$scope begin adder_loop[62] $end
$scope module fa $end
$var wire 1 L( A $end
$var wire 1 M( AB $end
$var wire 1 N( ACin $end
$var wire 1 O( AxorB $end
$var wire 1 P( B $end
$var wire 1 Q( BCin $end
$var wire 1 R( Cin $end
$var wire 1 S( Cout $end
$var wire 1 T( Sum $end
$upscope $end
$upscope $end
$scope begin adder_loop[63] $end
$scope module fa $end
$var wire 1 U( A $end
$var wire 1 V( AB $end
$var wire 1 W( ACin $end
$var wire 1 X( AxorB $end
$var wire 1 Y( B $end
$var wire 1 Z( BCin $end
$var wire 1 [( Cin $end
$var wire 1 \( Cout $end
$var wire 1 ]( Sum $end
$upscope $end
$upscope $end
$upscope $end
$scope module u_and $end
$var wire 64 ^( A [63:0] $end
$var wire 64 _( B [63:0] $end
$var wire 64 `( Y [63:0] $end
$scope begin genblk1[0] $end
$upscope $end
$scope begin genblk1[1] $end
$upscope $end
$scope begin genblk1[2] $end
$upscope $end
$scope begin genblk1[3] $end
$upscope $end
$scope begin genblk1[4] $end
$upscope $end
$scope begin genblk1[5] $end
$upscope $end
$scope begin genblk1[6] $end
$upscope $end
$scope begin genblk1[7] $end
$upscope $end
$scope begin genblk1[8] $end
$upscope $end
$scope begin genblk1[9] $end
$upscope $end
$scope begin genblk1[10] $end
$upscope $end
$scope begin genblk1[11] $end
$upscope $end
$scope begin genblk1[12] $end
$upscope $end
$scope begin genblk1[13] $end
$upscope $end
$scope begin genblk1[14] $end
$upscope $end
$scope begin genblk1[15] $end
$upscope $end
$scope begin genblk1[16] $end
$upscope $end
$scope begin genblk1[17] $end
$upscope $end
$scope begin genblk1[18] $end
$upscope $end
$scope begin genblk1[19] $end
$upscope $end
$scope begin genblk1[20] $end
$upscope $end
$scope begin genblk1[21] $end
$upscope $end
$scope begin genblk1[22] $end
$upscope $end
$scope begin genblk1[23] $end
$upscope $end
$scope begin genblk1[24] $end
$upscope $end
$scope begin genblk1[25] $end
$upscope $end
$scope begin genblk1[26] $end
$upscope $end
$scope begin genblk1[27] $end
$upscope $end
$scope begin genblk1[28] $end
$upscope $end
$scope begin genblk1[29] $end
$upscope $end
$scope begin genblk1[30] $end
$upscope $end
$scope begin genblk1[31] $end
$upscope $end
$scope begin genblk1[32] $end
$upscope $end
$scope begin genblk1[33] $end
$upscope $end
$scope begin genblk1[34] $end
$upscope $end
$scope begin genblk1[35] $end
$upscope $end
$scope begin genblk1[36] $end
$upscope $end
$scope begin genblk1[37] $end
$upscope $end
$scope begin genblk1[38] $end
$upscope $end
$scope begin genblk1[39] $end
$upscope $end
$scope begin genblk1[40] $end
$upscope $end
$scope begin genblk1[41] $end
$upscope $end
$scope begin genblk1[42] $end
$upscope $end
$scope begin genblk1[43] $end
$upscope $end
$scope begin genblk1[44] $end
$upscope $end
$scope begin genblk1[45] $end
$upscope $end
$scope begin genblk1[46] $end
$upscope $end
$scope begin genblk1[47] $end
$upscope $end
$scope begin genblk1[48] $end
$upscope $end
$scope begin genblk1[49] $end
$upscope $end
$scope begin genblk1[50] $end
$upscope $end
$scope begin genblk1[51] $end
$upscope $end
$scope begin genblk1[52] $end
$upscope $end
$scope begin genblk1[53] $end
$upscope $end
$scope begin genblk1[54] $end
$upscope $end
$scope begin genblk1[55] $end
$upscope $end
$scope begin genblk1[56] $end
$upscope $end
$scope begin genblk1[57] $end
$upscope $end
$scope begin genblk1[58] $end
$upscope $end
$scope begin genblk1[59] $end
$upscope $end
$scope begin genblk1[60] $end
$upscope $end
$scope begin genblk1[61] $end
$upscope $end
$scope begin genblk1[62] $end
$upscope $end
$scope begin genblk1[63] $end
$upscope $end
$upscope $end
$scope module u_or $end
$var wire 64 a( A [63:0] $end
$var wire 64 b( B [63:0] $end
$var wire 64 c( Y [63:0] $end
$scope begin genblk1[0] $end
$upscope $end
$scope begin genblk1[1] $end
$upscope $end
$scope begin genblk1[2] $end
$upscope $end
$scope begin genblk1[3] $end
$upscope $end
$scope begin genblk1[4] $end
$upscope $end
$scope begin genblk1[5] $end
$upscope $end
$scope begin genblk1[6] $end
$upscope $end
$scope begin genblk1[7] $end
$upscope $end
$scope begin genblk1[8] $end
$upscope $end
$scope begin genblk1[9] $end
$upscope $end
$scope begin genblk1[10] $end
$upscope $end
$scope begin genblk1[11] $end
$upscope $end
$scope begin genblk1[12] $end
$upscope $end
$scope begin genblk1[13] $end
$upscope $end
$scope begin genblk1[14] $end
$upscope $end
$scope begin genblk1[15] $end
$upscope $end
$scope begin genblk1[16] $end
$upscope $end
$scope begin genblk1[17] $end
$upscope $end
$scope begin genblk1[18] $end
$upscope $end
$scope begin genblk1[19] $end
$upscope $end
$scope begin genblk1[20] $end
$upscope $end
$scope begin genblk1[21] $end
$upscope $end
$scope begin genblk1[22] $end
$upscope $end
$scope begin genblk1[23] $end
$upscope $end
$scope begin genblk1[24] $end
$upscope $end
$scope begin genblk1[25] $end
$upscope $end
$scope begin genblk1[26] $end
$upscope $end
$scope begin genblk1[27] $end
$upscope $end
$scope begin genblk1[28] $end
$upscope $end
$scope begin genblk1[29] $end
$upscope $end
$scope begin genblk1[30] $end
$upscope $end
$scope begin genblk1[31] $end
$upscope $end
$scope begin genblk1[32] $end
$upscope $end
$scope begin genblk1[33] $end
$upscope $end
$scope begin genblk1[34] $end
$upscope $end
$scope begin genblk1[35] $end
$upscope $end
$scope begin genblk1[36] $end
$upscope $end
$scope begin genblk1[37] $end
$upscope $end
$scope begin genblk1[38] $end
$upscope $end
$scope begin genblk1[39] $end
$upscope $end
$scope begin genblk1[40] $end
$upscope $end
$scope begin genblk1[41] $end
$upscope $end
$scope begin genblk1[42] $end
$upscope $end
$scope begin genblk1[43] $end
$upscope $end
$scope begin genblk1[44] $end
$upscope $end
$scope begin genblk1[45] $end
$upscope $end
$scope begin genblk1[46] $end
$upscope $end
$scope begin genblk1[47] $end
$upscope $end
$scope begin genblk1[48] $end
$upscope $end
$scope begin genblk1[49] $end
$upscope $end
$scope begin genblk1[50] $end
$upscope $end
$scope begin genblk1[51] $end
$upscope $end
$scope begin genblk1[52] $end
$upscope $end
$scope begin genblk1[53] $end
$upscope $end
$scope begin genblk1[54] $end
$upscope $end
$scope begin genblk1[55] $end
$upscope $end
$scope begin genblk1[56] $end
$upscope $end
$scope begin genblk1[57] $end
$upscope $end
$scope begin genblk1[58] $end
$upscope $end
$scope begin genblk1[59] $end
$upscope $end
$scope begin genblk1[60] $end
$upscope $end
$scope begin genblk1[61] $end
$upscope $end
$scope begin genblk1[62] $end
$upscope $end
$scope begin genblk1[63] $end
$upscope $end
$upscope $end
$scope module u_sub $end
$var wire 64 d( A [63:0] $end
$var wire 64 e( B [63:0] $end
$var wire 64 f( Result [63:0] $end
$var wire 1 F" Cout $end
$var wire 64 g( B_compl [63:0] $end
$scope module not_b $end
$var wire 64 h( A [63:0] $end
$var wire 64 i( Result [63:0] $end
$scope begin genblk1[0] $end
$upscope $end
$scope begin genblk1[1] $end
$upscope $end
$scope begin genblk1[2] $end
$upscope $end
$scope begin genblk1[3] $end
$upscope $end
$scope begin genblk1[4] $end
$upscope $end
$scope begin genblk1[5] $end
$upscope $end
$scope begin genblk1[6] $end
$upscope $end
$scope begin genblk1[7] $end
$upscope $end
$scope begin genblk1[8] $end
$upscope $end
$scope begin genblk1[9] $end
$upscope $end
$scope begin genblk1[10] $end
$upscope $end
$scope begin genblk1[11] $end
$upscope $end
$scope begin genblk1[12] $end
$upscope $end
$scope begin genblk1[13] $end
$upscope $end
$scope begin genblk1[14] $end
$upscope $end
$scope begin genblk1[15] $end
$upscope $end
$scope begin genblk1[16] $end
$upscope $end
$scope begin genblk1[17] $end
$upscope $end
$scope begin genblk1[18] $end
$upscope $end
$scope begin genblk1[19] $end
$upscope $end
$scope begin genblk1[20] $end
$upscope $end
$scope begin genblk1[21] $end
$upscope $end
$scope begin genblk1[22] $end
$upscope $end
$scope begin genblk1[23] $end
$upscope $end
$scope begin genblk1[24] $end
$upscope $end
$scope begin genblk1[25] $end
$upscope $end
$scope begin genblk1[26] $end
$upscope $end
$scope begin genblk1[27] $end
$upscope $end
$scope begin genblk1[28] $end
$upscope $end
$scope begin genblk1[29] $end
$upscope $end
$scope begin genblk1[30] $end
$upscope $end
$scope begin genblk1[31] $end
$upscope $end
$scope begin genblk1[32] $end
$upscope $end
$scope begin genblk1[33] $end
$upscope $end
$scope begin genblk1[34] $end
$upscope $end
$scope begin genblk1[35] $end
$upscope $end
$scope begin genblk1[36] $end
$upscope $end
$scope begin genblk1[37] $end
$upscope $end
$scope begin genblk1[38] $end
$upscope $end
$scope begin genblk1[39] $end
$upscope $end
$scope begin genblk1[40] $end
$upscope $end
$scope begin genblk1[41] $end
$upscope $end
$scope begin genblk1[42] $end
$upscope $end
$scope begin genblk1[43] $end
$upscope $end
$scope begin genblk1[44] $end
$upscope $end
$scope begin genblk1[45] $end
$upscope $end
$scope begin genblk1[46] $end
$upscope $end
$scope begin genblk1[47] $end
$upscope $end
$scope begin genblk1[48] $end
$upscope $end
$scope begin genblk1[49] $end
$upscope $end
$scope begin genblk1[50] $end
$upscope $end
$scope begin genblk1[51] $end
$upscope $end
$scope begin genblk1[52] $end
$upscope $end
$scope begin genblk1[53] $end
$upscope $end
$scope begin genblk1[54] $end
$upscope $end
$scope begin genblk1[55] $end
$upscope $end
$scope begin genblk1[56] $end
$upscope $end
$scope begin genblk1[57] $end
$upscope $end
$scope begin genblk1[58] $end
$upscope $end
$scope begin genblk1[59] $end
$upscope $end
$scope begin genblk1[60] $end
$upscope $end
$scope begin genblk1[61] $end
$upscope $end
$scope begin genblk1[62] $end
$upscope $end
$scope begin genblk1[63] $end
$upscope $end
$upscope $end
$scope module sub $end
$var wire 64 j( A [63:0] $end
$var wire 64 k( B [63:0] $end
$var wire 1 l( Cin $end
$var wire 64 m( Result [63:0] $end
$var wire 64 n( sum [63:0] $end
$var wire 65 o( carry [64:0] $end
$var wire 1 F" Cout $end
$scope begin adder_loop[0] $end
$scope module fa $end
$var wire 1 p( A $end
$var wire 1 q( AB $end
$var wire 1 r( ACin $end
$var wire 1 s( AxorB $end
$var wire 1 t( B $end
$var wire 1 u( BCin $end
$var wire 1 v( Cin $end
$var wire 1 w( Cout $end
$var wire 1 x( Sum $end
$upscope $end
$upscope $end
$scope begin adder_loop[1] $end
$scope module fa $end
$var wire 1 y( A $end
$var wire 1 z( AB $end
$var wire 1 {( ACin $end
$var wire 1 |( AxorB $end
$var wire 1 }( B $end
$var wire 1 ~( BCin $end
$var wire 1 !) Cin $end
$var wire 1 ") Cout $end
$var wire 1 #) Sum $end
$upscope $end
$upscope $end
$scope begin adder_loop[2] $end
$scope module fa $end
$var wire 1 $) A $end
$var wire 1 %) AB $end
$var wire 1 &) ACin $end
$var wire 1 ') AxorB $end
$var wire 1 () B $end
$var wire 1 )) BCin $end
$var wire 1 *) Cin $end
$var wire 1 +) Cout $end
$var wire 1 ,) Sum $end
$upscope $end
$upscope $end
$scope begin adder_loop[3] $end
$scope module fa $end
$var wire 1 -) A $end
$var wire 1 .) AB $end
$var wire 1 /) ACin $end
$var wire 1 0) AxorB $end
$var wire 1 1) B $end
$var wire 1 2) BCin $end
$var wire 1 3) Cin $end
$var wire 1 4) Cout $end
$var wire 1 5) Sum $end
$upscope $end
$upscope $end
$scope begin adder_loop[4] $end
$scope module fa $end
$var wire 1 6) A $end
$var wire 1 7) AB $end
$var wire 1 8) ACin $end
$var wire 1 9) AxorB $end
$var wire 1 :) B $end
$var wire 1 ;) BCin $end
$var wire 1 <) Cin $end
$var wire 1 =) Cout $end
$var wire 1 >) Sum $end
$upscope $end
$upscope $end
$scope begin adder_loop[5] $end
$scope module fa $end
$var wire 1 ?) A $end
$var wire 1 @) AB $end
$var wire 1 A) ACin $end
$var wire 1 B) AxorB $end
$var wire 1 C) B $end
$var wire 1 D) BCin $end
$var wire 1 E) Cin $end
$var wire 1 F) Cout $end
$var wire 1 G) Sum $end
$upscope $end
$upscope $end
$scope begin adder_loop[6] $end
$scope module fa $end
$var wire 1 H) A $end
$var wire 1 I) AB $end
$var wire 1 J) ACin $end
$var wire 1 K) AxorB $end
$var wire 1 L) B $end
$var wire 1 M) BCin $end
$var wire 1 N) Cin $end
$var wire 1 O) Cout $end
$var wire 1 P) Sum $end
$upscope $end
$upscope $end
$scope begin adder_loop[7] $end
$scope module fa $end
$var wire 1 Q) A $end
$var wire 1 R) AB $end
$var wire 1 S) ACin $end
$var wire 1 T) AxorB $end
$var wire 1 U) B $end
$var wire 1 V) BCin $end
$var wire 1 W) Cin $end
$var wire 1 X) Cout $end
$var wire 1 Y) Sum $end
$upscope $end
$upscope $end
$scope begin adder_loop[8] $end
$scope module fa $end
$var wire 1 Z) A $end
$var wire 1 [) AB $end
$var wire 1 \) ACin $end
$var wire 1 ]) AxorB $end
$var wire 1 ^) B $end
$var wire 1 _) BCin $end
$var wire 1 `) Cin $end
$var wire 1 a) Cout $end
$var wire 1 b) Sum $end
$upscope $end
$upscope $end
$scope begin adder_loop[9] $end
$scope module fa $end
$var wire 1 c) A $end
$var wire 1 d) AB $end
$var wire 1 e) ACin $end
$var wire 1 f) AxorB $end
$var wire 1 g) B $end
$var wire 1 h) BCin $end
$var wire 1 i) Cin $end
$var wire 1 j) Cout $end
$var wire 1 k) Sum $end
$upscope $end
$upscope $end
$scope begin adder_loop[10] $end
$scope module fa $end
$var wire 1 l) A $end
$var wire 1 m) AB $end
$var wire 1 n) ACin $end
$var wire 1 o) AxorB $end
$var wire 1 p) B $end
$var wire 1 q) BCin $end
$var wire 1 r) Cin $end
$var wire 1 s) Cout $end
$var wire 1 t) Sum $end
$upscope $end
$upscope $end
$scope begin adder_loop[11] $end
$scope module fa $end
$var wire 1 u) A $end
$var wire 1 v) AB $end
$var wire 1 w) ACin $end
$var wire 1 x) AxorB $end
$var wire 1 y) B $end
$var wire 1 z) BCin $end
$var wire 1 {) Cin $end
$var wire 1 |) Cout $end
$var wire 1 }) Sum $end
$upscope $end
$upscope $end
$scope begin adder_loop[12] $end
$scope module fa $end
$var wire 1 ~) A $end
$var wire 1 !* AB $end
$var wire 1 "* ACin $end
$var wire 1 #* AxorB $end
$var wire 1 $* B $end
$var wire 1 %* BCin $end
$var wire 1 &* Cin $end
$var wire 1 '* Cout $end
$var wire 1 (* Sum $end
$upscope $end
$upscope $end
$scope begin adder_loop[13] $end
$scope module fa $end
$var wire 1 )* A $end
$var wire 1 ** AB $end
$var wire 1 +* ACin $end
$var wire 1 ,* AxorB $end
$var wire 1 -* B $end
$var wire 1 .* BCin $end
$var wire 1 /* Cin $end
$var wire 1 0* Cout $end
$var wire 1 1* Sum $end
$upscope $end
$upscope $end
$scope begin adder_loop[14] $end
$scope module fa $end
$var wire 1 2* A $end
$var wire 1 3* AB $end
$var wire 1 4* ACin $end
$var wire 1 5* AxorB $end
$var wire 1 6* B $end
$var wire 1 7* BCin $end
$var wire 1 8* Cin $end
$var wire 1 9* Cout $end
$var wire 1 :* Sum $end
$upscope $end
$upscope $end
$scope begin adder_loop[15] $end
$scope module fa $end
$var wire 1 ;* A $end
$var wire 1 <* AB $end
$var wire 1 =* ACin $end
$var wire 1 >* AxorB $end
$var wire 1 ?* B $end
$var wire 1 @* BCin $end
$var wire 1 A* Cin $end
$var wire 1 B* Cout $end
$var wire 1 C* Sum $end
$upscope $end
$upscope $end
$scope begin adder_loop[16] $end
$scope module fa $end
$var wire 1 D* A $end
$var wire 1 E* AB $end
$var wire 1 F* ACin $end
$var wire 1 G* AxorB $end
$var wire 1 H* B $end
$var wire 1 I* BCin $end
$var wire 1 J* Cin $end
$var wire 1 K* Cout $end
$var wire 1 L* Sum $end
$upscope $end
$upscope $end
$scope begin adder_loop[17] $end
$scope module fa $end
$var wire 1 M* A $end
$var wire 1 N* AB $end
$var wire 1 O* ACin $end
$var wire 1 P* AxorB $end
$var wire 1 Q* B $end
$var wire 1 R* BCin $end
$var wire 1 S* Cin $end
$var wire 1 T* Cout $end
$var wire 1 U* Sum $end
$upscope $end
$upscope $end
$scope begin adder_loop[18] $end
$scope module fa $end
$var wire 1 V* A $end
$var wire 1 W* AB $end
$var wire 1 X* ACin $end
$var wire 1 Y* AxorB $end
$var wire 1 Z* B $end
$var wire 1 [* BCin $end
$var wire 1 \* Cin $end
$var wire 1 ]* Cout $end
$var wire 1 ^* Sum $end
$upscope $end
$upscope $end
$scope begin adder_loop[19] $end
$scope module fa $end
$var wire 1 _* A $end
$var wire 1 `* AB $end
$var wire 1 a* ACin $end
$var wire 1 b* AxorB $end
$var wire 1 c* B $end
$var wire 1 d* BCin $end
$var wire 1 e* Cin $end
$var wire 1 f* Cout $end
$var wire 1 g* Sum $end
$upscope $end
$upscope $end
$scope begin adder_loop[20] $end
$scope module fa $end
$var wire 1 h* A $end
$var wire 1 i* AB $end
$var wire 1 j* ACin $end
$var wire 1 k* AxorB $end
$var wire 1 l* B $end
$var wire 1 m* BCin $end
$var wire 1 n* Cin $end
$var wire 1 o* Cout $end
$var wire 1 p* Sum $end
$upscope $end
$upscope $end
$scope begin adder_loop[21] $end
$scope module fa $end
$var wire 1 q* A $end
$var wire 1 r* AB $end
$var wire 1 s* ACin $end
$var wire 1 t* AxorB $end
$var wire 1 u* B $end
$var wire 1 v* BCin $end
$var wire 1 w* Cin $end
$var wire 1 x* Cout $end
$var wire 1 y* Sum $end
$upscope $end
$upscope $end
$scope begin adder_loop[22] $end
$scope module fa $end
$var wire 1 z* A $end
$var wire 1 {* AB $end
$var wire 1 |* ACin $end
$var wire 1 }* AxorB $end
$var wire 1 ~* B $end
$var wire 1 !+ BCin $end
$var wire 1 "+ Cin $end
$var wire 1 #+ Cout $end
$var wire 1 $+ Sum $end
$upscope $end
$upscope $end
$scope begin adder_loop[23] $end
$scope module fa $end
$var wire 1 %+ A $end
$var wire 1 &+ AB $end
$var wire 1 '+ ACin $end
$var wire 1 (+ AxorB $end
$var wire 1 )+ B $end
$var wire 1 *+ BCin $end
$var wire 1 ++ Cin $end
$var wire 1 ,+ Cout $end
$var wire 1 -+ Sum $end
$upscope $end
$upscope $end
$scope begin adder_loop[24] $end
$scope module fa $end
$var wire 1 .+ A $end
$var wire 1 /+ AB $end
$var wire 1 0+ ACin $end
$var wire 1 1+ AxorB $end
$var wire 1 2+ B $end
$var wire 1 3+ BCin $end
$var wire 1 4+ Cin $end
$var wire 1 5+ Cout $end
$var wire 1 6+ Sum $end
$upscope $end
$upscope $end
$scope begin adder_loop[25] $end
$scope module fa $end
$var wire 1 7+ A $end
$var wire 1 8+ AB $end
$var wire 1 9+ ACin $end
$var wire 1 :+ AxorB $end
$var wire 1 ;+ B $end
$var wire 1 <+ BCin $end
$var wire 1 =+ Cin $end
$var wire 1 >+ Cout $end
$var wire 1 ?+ Sum $end
$upscope $end
$upscope $end
$scope begin adder_loop[26] $end
$scope module fa $end
$var wire 1 @+ A $end
$var wire 1 A+ AB $end
$var wire 1 B+ ACin $end
$var wire 1 C+ AxorB $end
$var wire 1 D+ B $end
$var wire 1 E+ BCin $end
$var wire 1 F+ Cin $end
$var wire 1 G+ Cout $end
$var wire 1 H+ Sum $end
$upscope $end
$upscope $end
$scope begin adder_loop[27] $end
$scope module fa $end
$var wire 1 I+ A $end
$var wire 1 J+ AB $end
$var wire 1 K+ ACin $end
$var wire 1 L+ AxorB $end
$var wire 1 M+ B $end
$var wire 1 N+ BCin $end
$var wire 1 O+ Cin $end
$var wire 1 P+ Cout $end
$var wire 1 Q+ Sum $end
$upscope $end
$upscope $end
$scope begin adder_loop[28] $end
$scope module fa $end
$var wire 1 R+ A $end
$var wire 1 S+ AB $end
$var wire 1 T+ ACin $end
$var wire 1 U+ AxorB $end
$var wire 1 V+ B $end
$var wire 1 W+ BCin $end
$var wire 1 X+ Cin $end
$var wire 1 Y+ Cout $end
$var wire 1 Z+ Sum $end
$upscope $end
$upscope $end
$scope begin adder_loop[29] $end
$scope module fa $end
$var wire 1 [+ A $end
$var wire 1 \+ AB $end
$var wire 1 ]+ ACin $end
$var wire 1 ^+ AxorB $end
$var wire 1 _+ B $end
$var wire 1 `+ BCin $end
$var wire 1 a+ Cin $end
$var wire 1 b+ Cout $end
$var wire 1 c+ Sum $end
$upscope $end
$upscope $end
$scope begin adder_loop[30] $end
$scope module fa $end
$var wire 1 d+ A $end
$var wire 1 e+ AB $end
$var wire 1 f+ ACin $end
$var wire 1 g+ AxorB $end
$var wire 1 h+ B $end
$var wire 1 i+ BCin $end
$var wire 1 j+ Cin $end
$var wire 1 k+ Cout $end
$var wire 1 l+ Sum $end
$upscope $end
$upscope $end
$scope begin adder_loop[31] $end
$scope module fa $end
$var wire 1 m+ A $end
$var wire 1 n+ AB $end
$var wire 1 o+ ACin $end
$var wire 1 p+ AxorB $end
$var wire 1 q+ B $end
$var wire 1 r+ BCin $end
$var wire 1 s+ Cin $end
$var wire 1 t+ Cout $end
$var wire 1 u+ Sum $end
$upscope $end
$upscope $end
$scope begin adder_loop[32] $end
$scope module fa $end
$var wire 1 v+ A $end
$var wire 1 w+ AB $end
$var wire 1 x+ ACin $end
$var wire 1 y+ AxorB $end
$var wire 1 z+ B $end
$var wire 1 {+ BCin $end
$var wire 1 |+ Cin $end
$var wire 1 }+ Cout $end
$var wire 1 ~+ Sum $end
$upscope $end
$upscope $end
$scope begin adder_loop[33] $end
$scope module fa $end
$var wire 1 !, A $end
$var wire 1 ", AB $end
$var wire 1 #, ACin $end
$var wire 1 $, AxorB $end
$var wire 1 %, B $end
$var wire 1 &, BCin $end
$var wire 1 ', Cin $end
$var wire 1 (, Cout $end
$var wire 1 ), Sum $end
$upscope $end
$upscope $end
$scope begin adder_loop[34] $end
$scope module fa $end
$var wire 1 *, A $end
$var wire 1 +, AB $end
$var wire 1 ,, ACin $end
$var wire 1 -, AxorB $end
$var wire 1 ., B $end
$var wire 1 /, BCin $end
$var wire 1 0, Cin $end
$var wire 1 1, Cout $end
$var wire 1 2, Sum $end
$upscope $end
$upscope $end
$scope begin adder_loop[35] $end
$scope module fa $end
$var wire 1 3, A $end
$var wire 1 4, AB $end
$var wire 1 5, ACin $end
$var wire 1 6, AxorB $end
$var wire 1 7, B $end
$var wire 1 8, BCin $end
$var wire 1 9, Cin $end
$var wire 1 :, Cout $end
$var wire 1 ;, Sum $end
$upscope $end
$upscope $end
$scope begin adder_loop[36] $end
$scope module fa $end
$var wire 1 <, A $end
$var wire 1 =, AB $end
$var wire 1 >, ACin $end
$var wire 1 ?, AxorB $end
$var wire 1 @, B $end
$var wire 1 A, BCin $end
$var wire 1 B, Cin $end
$var wire 1 C, Cout $end
$var wire 1 D, Sum $end
$upscope $end
$upscope $end
$scope begin adder_loop[37] $end
$scope module fa $end
$var wire 1 E, A $end
$var wire 1 F, AB $end
$var wire 1 G, ACin $end
$var wire 1 H, AxorB $end
$var wire 1 I, B $end
$var wire 1 J, BCin $end
$var wire 1 K, Cin $end
$var wire 1 L, Cout $end
$var wire 1 M, Sum $end
$upscope $end
$upscope $end
$scope begin adder_loop[38] $end
$scope module fa $end
$var wire 1 N, A $end
$var wire 1 O, AB $end
$var wire 1 P, ACin $end
$var wire 1 Q, AxorB $end
$var wire 1 R, B $end
$var wire 1 S, BCin $end
$var wire 1 T, Cin $end
$var wire 1 U, Cout $end
$var wire 1 V, Sum $end
$upscope $end
$upscope $end
$scope begin adder_loop[39] $end
$scope module fa $end
$var wire 1 W, A $end
$var wire 1 X, AB $end
$var wire 1 Y, ACin $end
$var wire 1 Z, AxorB $end
$var wire 1 [, B $end
$var wire 1 \, BCin $end
$var wire 1 ], Cin $end
$var wire 1 ^, Cout $end
$var wire 1 _, Sum $end
$upscope $end
$upscope $end
$scope begin adder_loop[40] $end
$scope module fa $end
$var wire 1 `, A $end
$var wire 1 a, AB $end
$var wire 1 b, ACin $end
$var wire 1 c, AxorB $end
$var wire 1 d, B $end
$var wire 1 e, BCin $end
$var wire 1 f, Cin $end
$var wire 1 g, Cout $end
$var wire 1 h, Sum $end
$upscope $end
$upscope $end
$scope begin adder_loop[41] $end
$scope module fa $end
$var wire 1 i, A $end
$var wire 1 j, AB $end
$var wire 1 k, ACin $end
$var wire 1 l, AxorB $end
$var wire 1 m, B $end
$var wire 1 n, BCin $end
$var wire 1 o, Cin $end
$var wire 1 p, Cout $end
$var wire 1 q, Sum $end
$upscope $end
$upscope $end
$scope begin adder_loop[42] $end
$scope module fa $end
$var wire 1 r, A $end
$var wire 1 s, AB $end
$var wire 1 t, ACin $end
$var wire 1 u, AxorB $end
$var wire 1 v, B $end
$var wire 1 w, BCin $end
$var wire 1 x, Cin $end
$var wire 1 y, Cout $end
$var wire 1 z, Sum $end
$upscope $end
$upscope $end
$scope begin adder_loop[43] $end
$scope module fa $end
$var wire 1 {, A $end
$var wire 1 |, AB $end
$var wire 1 }, ACin $end
$var wire 1 ~, AxorB $end
$var wire 1 !- B $end
$var wire 1 "- BCin $end
$var wire 1 #- Cin $end
$var wire 1 $- Cout $end
$var wire 1 %- Sum $end
$upscope $end
$upscope $end
$scope begin adder_loop[44] $end
$scope module fa $end
$var wire 1 &- A $end
$var wire 1 '- AB $end
$var wire 1 (- ACin $end
$var wire 1 )- AxorB $end
$var wire 1 *- B $end
$var wire 1 +- BCin $end
$var wire 1 ,- Cin $end
$var wire 1 -- Cout $end
$var wire 1 .- Sum $end
$upscope $end
$upscope $end
$scope begin adder_loop[45] $end
$scope module fa $end
$var wire 1 /- A $end
$var wire 1 0- AB $end
$var wire 1 1- ACin $end
$var wire 1 2- AxorB $end
$var wire 1 3- B $end
$var wire 1 4- BCin $end
$var wire 1 5- Cin $end
$var wire 1 6- Cout $end
$var wire 1 7- Sum $end
$upscope $end
$upscope $end
$scope begin adder_loop[46] $end
$scope module fa $end
$var wire 1 8- A $end
$var wire 1 9- AB $end
$var wire 1 :- ACin $end
$var wire 1 ;- AxorB $end
$var wire 1 <- B $end
$var wire 1 =- BCin $end
$var wire 1 >- Cin $end
$var wire 1 ?- Cout $end
$var wire 1 @- Sum $end
$upscope $end
$upscope $end
$scope begin adder_loop[47] $end
$scope module fa $end
$var wire 1 A- A $end
$var wire 1 B- AB $end
$var wire 1 C- ACin $end
$var wire 1 D- AxorB $end
$var wire 1 E- B $end
$var wire 1 F- BCin $end
$var wire 1 G- Cin $end
$var wire 1 H- Cout $end
$var wire 1 I- Sum $end
$upscope $end
$upscope $end
$scope begin adder_loop[48] $end
$scope module fa $end
$var wire 1 J- A $end
$var wire 1 K- AB $end
$var wire 1 L- ACin $end
$var wire 1 M- AxorB $end
$var wire 1 N- B $end
$var wire 1 O- BCin $end
$var wire 1 P- Cin $end
$var wire 1 Q- Cout $end
$var wire 1 R- Sum $end
$upscope $end
$upscope $end
$scope begin adder_loop[49] $end
$scope module fa $end
$var wire 1 S- A $end
$var wire 1 T- AB $end
$var wire 1 U- ACin $end
$var wire 1 V- AxorB $end
$var wire 1 W- B $end
$var wire 1 X- BCin $end
$var wire 1 Y- Cin $end
$var wire 1 Z- Cout $end
$var wire 1 [- Sum $end
$upscope $end
$upscope $end
$scope begin adder_loop[50] $end
$scope module fa $end
$var wire 1 \- A $end
$var wire 1 ]- AB $end
$var wire 1 ^- ACin $end
$var wire 1 _- AxorB $end
$var wire 1 `- B $end
$var wire 1 a- BCin $end
$var wire 1 b- Cin $end
$var wire 1 c- Cout $end
$var wire 1 d- Sum $end
$upscope $end
$upscope $end
$scope begin adder_loop[51] $end
$scope module fa $end
$var wire 1 e- A $end
$var wire 1 f- AB $end
$var wire 1 g- ACin $end
$var wire 1 h- AxorB $end
$var wire 1 i- B $end
$var wire 1 j- BCin $end
$var wire 1 k- Cin $end
$var wire 1 l- Cout $end
$var wire 1 m- Sum $end
$upscope $end
$upscope $end
$scope begin adder_loop[52] $end
$scope module fa $end
$var wire 1 n- A $end
$var wire 1 o- AB $end
$var wire 1 p- ACin $end
$var wire 1 q- AxorB $end
$var wire 1 r- B $end
$var wire 1 s- BCin $end
$var wire 1 t- Cin $end
$var wire 1 u- Cout $end
$var wire 1 v- Sum $end
$upscope $end
$upscope $end
$scope begin adder_loop[53] $end
$scope module fa $end
$var wire 1 w- A $end
$var wire 1 x- AB $end
$var wire 1 y- ACin $end
$var wire 1 z- AxorB $end
$var wire 1 {- B $end
$var wire 1 |- BCin $end
$var wire 1 }- Cin $end
$var wire 1 ~- Cout $end
$var wire 1 !. Sum $end
$upscope $end
$upscope $end
$scope begin adder_loop[54] $end
$scope module fa $end
$var wire 1 ". A $end
$var wire 1 #. AB $end
$var wire 1 $. ACin $end
$var wire 1 %. AxorB $end
$var wire 1 &. B $end
$var wire 1 '. BCin $end
$var wire 1 (. Cin $end
$var wire 1 ). Cout $end
$var wire 1 *. Sum $end
$upscope $end
$upscope $end
$scope begin adder_loop[55] $end
$scope module fa $end
$var wire 1 +. A $end
$var wire 1 ,. AB $end
$var wire 1 -. ACin $end
$var wire 1 .. AxorB $end
$var wire 1 /. B $end
$var wire 1 0. BCin $end
$var wire 1 1. Cin $end
$var wire 1 2. Cout $end
$var wire 1 3. Sum $end
$upscope $end
$upscope $end
$scope begin adder_loop[56] $end
$scope module fa $end
$var wire 1 4. A $end
$var wire 1 5. AB $end
$var wire 1 6. ACin $end
$var wire 1 7. AxorB $end
$var wire 1 8. B $end
$var wire 1 9. BCin $end
$var wire 1 :. Cin $end
$var wire 1 ;. Cout $end
$var wire 1 <. Sum $end
$upscope $end
$upscope $end
$scope begin adder_loop[57] $end
$scope module fa $end
$var wire 1 =. A $end
$var wire 1 >. AB $end
$var wire 1 ?. ACin $end
$var wire 1 @. AxorB $end
$var wire 1 A. B $end
$var wire 1 B. BCin $end
$var wire 1 C. Cin $end
$var wire 1 D. Cout $end
$var wire 1 E. Sum $end
$upscope $end
$upscope $end
$scope begin adder_loop[58] $end
$scope module fa $end
$var wire 1 F. A $end
$var wire 1 G. AB $end
$var wire 1 H. ACin $end
$var wire 1 I. AxorB $end
$var wire 1 J. B $end
$var wire 1 K. BCin $end
$var wire 1 L. Cin $end
$var wire 1 M. Cout $end
$var wire 1 N. Sum $end
$upscope $end
$upscope $end
$scope begin adder_loop[59] $end
$scope module fa $end
$var wire 1 O. A $end
$var wire 1 P. AB $end
$var wire 1 Q. ACin $end
$var wire 1 R. AxorB $end
$var wire 1 S. B $end
$var wire 1 T. BCin $end
$var wire 1 U. Cin $end
$var wire 1 V. Cout $end
$var wire 1 W. Sum $end
$upscope $end
$upscope $end
$scope begin adder_loop[60] $end
$scope module fa $end
$var wire 1 X. A $end
$var wire 1 Y. AB $end
$var wire 1 Z. ACin $end
$var wire 1 [. AxorB $end
$var wire 1 \. B $end
$var wire 1 ]. BCin $end
$var wire 1 ^. Cin $end
$var wire 1 _. Cout $end
$var wire 1 `. Sum $end
$upscope $end
$upscope $end
$scope begin adder_loop[61] $end
$scope module fa $end
$var wire 1 a. A $end
$var wire 1 b. AB $end
$var wire 1 c. ACin $end
$var wire 1 d. AxorB $end
$var wire 1 e. B $end
$var wire 1 f. BCin $end
$var wire 1 g. Cin $end
$var wire 1 h. Cout $end
$var wire 1 i. Sum $end
$upscope $end
$upscope $end
$scope begin adder_loop[62] $end
$scope module fa $end
$var wire 1 j. A $end
$var wire 1 k. AB $end
$var wire 1 l. ACin $end
$var wire 1 m. AxorB $end
$var wire 1 n. B $end
$var wire 1 o. BCin $end
$var wire 1 p. Cin $end
$var wire 1 q. Cout $end
$var wire 1 r. Sum $end
$upscope $end
$upscope $end
$scope begin adder_loop[63] $end
$scope module fa $end
$var wire 1 s. A $end
$var wire 1 t. AB $end
$var wire 1 u. ACin $end
$var wire 1 v. AxorB $end
$var wire 1 w. B $end
$var wire 1 x. BCin $end
$var wire 1 y. Cin $end
$var wire 1 z. Cout $end
$var wire 1 {. Sum $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module ctrl $end
$var wire 1 e ALUSrc $end
$var wire 1 a Branch $end
$var wire 1 = MemRead $end
$var wire 1 ; MemWrite $end
$var wire 1 : MemtoReg $end
$var wire 1 6 RegWrite $end
$var wire 1 |. is_beq $end
$var wire 1 }. is_ld $end
$var wire 1 ~. is_rtype $end
$var wire 1 !/ is_sd $end
$var wire 1 "/ n_op2 $end
$var wire 1 #/ n_op3 $end
$var wire 1 $/ n_op4 $end
$var wire 1 %/ n_op5 $end
$var wire 1 &/ n_op6 $end
$var wire 7 '/ opcode [6:0] $end
$var wire 1 (/ op6 $end
$var wire 1 )/ op5 $end
$var wire 1 */ op4 $end
$var wire 1 +/ op3 $end
$var wire 1 ,/ op2 $end
$var wire 1 -/ op1 $end
$var wire 1 ./ op0 $end
$var wire 2 // ALUOp [1:0] $end
$upscope $end
$scope module dmem $end
$var wire 1 ! clk $end
$var wire 64 0/ write_data [63:0] $end
$var wire 1 C mem_write $end
$var wire 1 D mem_read $end
$var wire 64 1/ address [63:0] $end
$var reg 64 2/ read_data [63:0] $end
$upscope $end
$scope module ex_mem $end
$var wire 64 3/ Alu_result [63:0] $end
$var wire 1 % Alu_zero $end
$var wire 64 4/ EX_PC [63:0] $end
$var wire 64 5/ EX_RegData2 [63:0] $end
$var wire 1 ! clk $end
$var wire 1 $ flush $end
$var wire 1 " reset $end
$var wire 1 S EX_RegWrite $end
$var wire 5 6/ EX_Rd [4:0] $end
$var wire 1 W EX_MemtoReg $end
$var wire 1 X EX_MemWrite $end
$var wire 1 Y EX_MemRead $end
$var wire 1 \ EX_Branch $end
$var reg 64 7/ MEM_Alu_result [63:0] $end
$var reg 1 F MEM_Alu_zero $end
$var reg 1 E MEM_Branch $end
$var reg 1 D MEM_MemRead $end
$var reg 1 C MEM_MemWrite $end
$var reg 1 B MEM_MemtoReg $end
$var reg 64 8/ MEM_PC [63:0] $end
$var reg 5 9/ MEM_Rd [4:0] $end
$var reg 64 :/ MEM_RegData2 [63:0] $end
$var reg 1 > MEM_RegWrite $end
$upscope $end
$scope module fwd_unit $end
$var wire 5 ;/ MEM_Rd [4:0] $end
$var wire 1 > MEM_RegWrite $end
$var wire 1 1 WB_RegWrite $end
$var wire 5 </ WB_Rd [4:0] $end
$var wire 5 =/ EX_Rs2 [4:0] $end
$var wire 5 >/ EX_Rs1 [4:0] $end
$var reg 2 ?/ ForwardA [1:0] $end
$var reg 2 @/ ForwardB [1:0] $end
$upscope $end
$scope module hdu $end
$var wire 5 A/ rs1 [4:0] $end
$var wire 5 B/ rs2 [4:0] $end
$var wire 5 C/ EX_Rd [4:0] $end
$var wire 1 Y EX_MemRead $end
$var reg 1 ` ControlStall $end
$var reg 1 J IF_ID_reg_write $end
$var reg 1 9 PCWrite $end
$upscope $end
$scope module id_exe $end
$var wire 2 D/ ALUOp [1:0] $end
$var wire 1 i ALUSrc $end
$var wire 1 j Branch $end
$var wire 5 E/ ID_Rd [4:0] $end
$var wire 5 F/ ID_Rs1 [4:0] $end
$var wire 5 G/ ID_Rs2 [4:0] $end
$var wire 1 . ID_bit30 $end
$var wire 3 H/ ID_funct3 [2:0] $end
$var wire 1 k MemRead $end
$var wire 1 l MemWrite $end
$var wire 1 m MemtoReg $end
$var wire 1 n RegWrite $end
$var wire 1 ! clk $end
$var wire 1 $ flush $end
$var wire 1 " reset $end
$var wire 64 I/ ID_pc [63:0] $end
$var wire 64 J/ ID_RegData2 [63:0] $end
$var wire 64 K/ ID_RegData1 [63:0] $end
$var wire 64 L/ ID_Imm [63:0] $end
$var reg 2 M/ EX_ALUOp [1:0] $end
$var reg 1 ^ EX_ALUSrc $end
$var reg 1 \ EX_Branch $end
$var reg 64 N/ EX_Imm [63:0] $end
$var reg 1 Y EX_MemRead $end
$var reg 1 X EX_MemWrite $end
$var reg 1 W EX_MemtoReg $end
$var reg 5 O/ EX_Rd [4:0] $end
$var reg 64 P/ EX_RegData1 [63:0] $end
$var reg 64 Q/ EX_RegData2 [63:0] $end
$var reg 1 S EX_RegWrite $end
$var reg 5 R/ EX_Rs1 [4:0] $end
$var reg 5 S/ EX_Rs2 [4:0] $end
$var reg 1 ] EX_bit30 $end
$var reg 3 T/ EX_funct3 [2:0] $end
$var reg 64 U/ EX_pc [63:0] $end
$upscope $end
$scope module if_id $end
$var wire 1 J IF_ID_reg_write $end
$var wire 1 ! clk $end
$var wire 1 $ flush $end
$var wire 64 V/ if_pc [63:0] $end
$var wire 1 " reset $end
$var wire 32 W/ if_instruction [31:0] $end
$var reg 32 X/ id_instruction [31:0] $end
$var reg 64 Y/ id_pc [63:0] $end
$upscope $end
$scope module imem $end
$var wire 64 Z/ addr [63:0] $end
$var wire 32 [/ instruction [31:0] $end
$upscope $end
$scope module immgen $end
$var wire 1 \/ default_case $end
$var wire 32 ]/ instruction [31:0] $end
$var wire 1 ^/ n_op2 $end
$var wire 1 _/ n_op3 $end
$var wire 1 `/ n_op4 $end
$var wire 1 a/ n_op5 $end
$var wire 1 b/ n_op6 $end
$var wire 1 c/ or_sel $end
$var wire 1 d/ sel_B_temp $end
$var wire 1 e/ sel_I_temp $end
$var wire 1 f/ sel_S_temp $end
$var wire 1 g/ temp_B1 $end
$var wire 1 h/ temp_B2 $end
$var wire 1 i/ temp_I1 $end
$var wire 1 j/ temp_I2 $end
$var wire 1 k/ temp_S1 $end
$var wire 1 l/ temp_S2 $end
$var wire 1 m/ sign_bit $end
$var wire 7 n/ opcode [6:0] $end
$var wire 2 o/ mux_sel [1:0] $end
$var wire 64 p/ imm_out [63:0] $end
$var wire 12 q/ imm_S_field [11:0] $end
$var wire 64 r/ imm_S [63:0] $end
$var wire 12 s/ imm_I_field [11:0] $end
$var wire 64 t/ imm_I [63:0] $end
$var wire 13 u/ imm_B_field [12:0] $end
$var wire 64 v/ imm_B [63:0] $end
$scope module mux_inst $end
$var wire 64 w/ in0 [63:0] $end
$var wire 64 x/ in1 [63:0] $end
$var wire 64 y/ in2 [63:0] $end
$var wire 64 z/ in3 [63:0] $end
$var wire 2 {/ sel [1:0] $end
$var wire 64 |/ out [63:0] $end
$scope begin mux_loop[0] $end
$var wire 1 }/ t0 $end
$var wire 1 ~/ t1 $end
$var wire 1 !0 t2 $end
$var wire 1 "0 t3 $end
$upscope $end
$scope begin mux_loop[1] $end
$var wire 1 #0 t0 $end
$var wire 1 $0 t1 $end
$var wire 1 %0 t2 $end
$var wire 1 &0 t3 $end
$upscope $end
$scope begin mux_loop[2] $end
$var wire 1 '0 t0 $end
$var wire 1 (0 t1 $end
$var wire 1 )0 t2 $end
$var wire 1 *0 t3 $end
$upscope $end
$scope begin mux_loop[3] $end
$var wire 1 +0 t0 $end
$var wire 1 ,0 t1 $end
$var wire 1 -0 t2 $end
$var wire 1 .0 t3 $end
$upscope $end
$scope begin mux_loop[4] $end
$var wire 1 /0 t0 $end
$var wire 1 00 t1 $end
$var wire 1 10 t2 $end
$var wire 1 20 t3 $end
$upscope $end
$scope begin mux_loop[5] $end
$var wire 1 30 t0 $end
$var wire 1 40 t1 $end
$var wire 1 50 t2 $end
$var wire 1 60 t3 $end
$upscope $end
$scope begin mux_loop[6] $end
$var wire 1 70 t0 $end
$var wire 1 80 t1 $end
$var wire 1 90 t2 $end
$var wire 1 :0 t3 $end
$upscope $end
$scope begin mux_loop[7] $end
$var wire 1 ;0 t0 $end
$var wire 1 <0 t1 $end
$var wire 1 =0 t2 $end
$var wire 1 >0 t3 $end
$upscope $end
$scope begin mux_loop[8] $end
$var wire 1 ?0 t0 $end
$var wire 1 @0 t1 $end
$var wire 1 A0 t2 $end
$var wire 1 B0 t3 $end
$upscope $end
$scope begin mux_loop[9] $end
$var wire 1 C0 t0 $end
$var wire 1 D0 t1 $end
$var wire 1 E0 t2 $end
$var wire 1 F0 t3 $end
$upscope $end
$scope begin mux_loop[10] $end
$var wire 1 G0 t0 $end
$var wire 1 H0 t1 $end
$var wire 1 I0 t2 $end
$var wire 1 J0 t3 $end
$upscope $end
$scope begin mux_loop[11] $end
$var wire 1 K0 t0 $end
$var wire 1 L0 t1 $end
$var wire 1 M0 t2 $end
$var wire 1 N0 t3 $end
$upscope $end
$scope begin mux_loop[12] $end
$var wire 1 O0 t0 $end
$var wire 1 P0 t1 $end
$var wire 1 Q0 t2 $end
$var wire 1 R0 t3 $end
$upscope $end
$scope begin mux_loop[13] $end
$var wire 1 S0 t0 $end
$var wire 1 T0 t1 $end
$var wire 1 U0 t2 $end
$var wire 1 V0 t3 $end
$upscope $end
$scope begin mux_loop[14] $end
$var wire 1 W0 t0 $end
$var wire 1 X0 t1 $end
$var wire 1 Y0 t2 $end
$var wire 1 Z0 t3 $end
$upscope $end
$scope begin mux_loop[15] $end
$var wire 1 [0 t0 $end
$var wire 1 \0 t1 $end
$var wire 1 ]0 t2 $end
$var wire 1 ^0 t3 $end
$upscope $end
$scope begin mux_loop[16] $end
$var wire 1 _0 t0 $end
$var wire 1 `0 t1 $end
$var wire 1 a0 t2 $end
$var wire 1 b0 t3 $end
$upscope $end
$scope begin mux_loop[17] $end
$var wire 1 c0 t0 $end
$var wire 1 d0 t1 $end
$var wire 1 e0 t2 $end
$var wire 1 f0 t3 $end
$upscope $end
$scope begin mux_loop[18] $end
$var wire 1 g0 t0 $end
$var wire 1 h0 t1 $end
$var wire 1 i0 t2 $end
$var wire 1 j0 t3 $end
$upscope $end
$scope begin mux_loop[19] $end
$var wire 1 k0 t0 $end
$var wire 1 l0 t1 $end
$var wire 1 m0 t2 $end
$var wire 1 n0 t3 $end
$upscope $end
$scope begin mux_loop[20] $end
$var wire 1 o0 t0 $end
$var wire 1 p0 t1 $end
$var wire 1 q0 t2 $end
$var wire 1 r0 t3 $end
$upscope $end
$scope begin mux_loop[21] $end
$var wire 1 s0 t0 $end
$var wire 1 t0 t1 $end
$var wire 1 u0 t2 $end
$var wire 1 v0 t3 $end
$upscope $end
$scope begin mux_loop[22] $end
$var wire 1 w0 t0 $end
$var wire 1 x0 t1 $end
$var wire 1 y0 t2 $end
$var wire 1 z0 t3 $end
$upscope $end
$scope begin mux_loop[23] $end
$var wire 1 {0 t0 $end
$var wire 1 |0 t1 $end
$var wire 1 }0 t2 $end
$var wire 1 ~0 t3 $end
$upscope $end
$scope begin mux_loop[24] $end
$var wire 1 !1 t0 $end
$var wire 1 "1 t1 $end
$var wire 1 #1 t2 $end
$var wire 1 $1 t3 $end
$upscope $end
$scope begin mux_loop[25] $end
$var wire 1 %1 t0 $end
$var wire 1 &1 t1 $end
$var wire 1 '1 t2 $end
$var wire 1 (1 t3 $end
$upscope $end
$scope begin mux_loop[26] $end
$var wire 1 )1 t0 $end
$var wire 1 *1 t1 $end
$var wire 1 +1 t2 $end
$var wire 1 ,1 t3 $end
$upscope $end
$scope begin mux_loop[27] $end
$var wire 1 -1 t0 $end
$var wire 1 .1 t1 $end
$var wire 1 /1 t2 $end
$var wire 1 01 t3 $end
$upscope $end
$scope begin mux_loop[28] $end
$var wire 1 11 t0 $end
$var wire 1 21 t1 $end
$var wire 1 31 t2 $end
$var wire 1 41 t3 $end
$upscope $end
$scope begin mux_loop[29] $end
$var wire 1 51 t0 $end
$var wire 1 61 t1 $end
$var wire 1 71 t2 $end
$var wire 1 81 t3 $end
$upscope $end
$scope begin mux_loop[30] $end
$var wire 1 91 t0 $end
$var wire 1 :1 t1 $end
$var wire 1 ;1 t2 $end
$var wire 1 <1 t3 $end
$upscope $end
$scope begin mux_loop[31] $end
$var wire 1 =1 t0 $end
$var wire 1 >1 t1 $end
$var wire 1 ?1 t2 $end
$var wire 1 @1 t3 $end
$upscope $end
$scope begin mux_loop[32] $end
$var wire 1 A1 t0 $end
$var wire 1 B1 t1 $end
$var wire 1 C1 t2 $end
$var wire 1 D1 t3 $end
$upscope $end
$scope begin mux_loop[33] $end
$var wire 1 E1 t0 $end
$var wire 1 F1 t1 $end
$var wire 1 G1 t2 $end
$var wire 1 H1 t3 $end
$upscope $end
$scope begin mux_loop[34] $end
$var wire 1 I1 t0 $end
$var wire 1 J1 t1 $end
$var wire 1 K1 t2 $end
$var wire 1 L1 t3 $end
$upscope $end
$scope begin mux_loop[35] $end
$var wire 1 M1 t0 $end
$var wire 1 N1 t1 $end
$var wire 1 O1 t2 $end
$var wire 1 P1 t3 $end
$upscope $end
$scope begin mux_loop[36] $end
$var wire 1 Q1 t0 $end
$var wire 1 R1 t1 $end
$var wire 1 S1 t2 $end
$var wire 1 T1 t3 $end
$upscope $end
$scope begin mux_loop[37] $end
$var wire 1 U1 t0 $end
$var wire 1 V1 t1 $end
$var wire 1 W1 t2 $end
$var wire 1 X1 t3 $end
$upscope $end
$scope begin mux_loop[38] $end
$var wire 1 Y1 t0 $end
$var wire 1 Z1 t1 $end
$var wire 1 [1 t2 $end
$var wire 1 \1 t3 $end
$upscope $end
$scope begin mux_loop[39] $end
$var wire 1 ]1 t0 $end
$var wire 1 ^1 t1 $end
$var wire 1 _1 t2 $end
$var wire 1 `1 t3 $end
$upscope $end
$scope begin mux_loop[40] $end
$var wire 1 a1 t0 $end
$var wire 1 b1 t1 $end
$var wire 1 c1 t2 $end
$var wire 1 d1 t3 $end
$upscope $end
$scope begin mux_loop[41] $end
$var wire 1 e1 t0 $end
$var wire 1 f1 t1 $end
$var wire 1 g1 t2 $end
$var wire 1 h1 t3 $end
$upscope $end
$scope begin mux_loop[42] $end
$var wire 1 i1 t0 $end
$var wire 1 j1 t1 $end
$var wire 1 k1 t2 $end
$var wire 1 l1 t3 $end
$upscope $end
$scope begin mux_loop[43] $end
$var wire 1 m1 t0 $end
$var wire 1 n1 t1 $end
$var wire 1 o1 t2 $end
$var wire 1 p1 t3 $end
$upscope $end
$scope begin mux_loop[44] $end
$var wire 1 q1 t0 $end
$var wire 1 r1 t1 $end
$var wire 1 s1 t2 $end
$var wire 1 t1 t3 $end
$upscope $end
$scope begin mux_loop[45] $end
$var wire 1 u1 t0 $end
$var wire 1 v1 t1 $end
$var wire 1 w1 t2 $end
$var wire 1 x1 t3 $end
$upscope $end
$scope begin mux_loop[46] $end
$var wire 1 y1 t0 $end
$var wire 1 z1 t1 $end
$var wire 1 {1 t2 $end
$var wire 1 |1 t3 $end
$upscope $end
$scope begin mux_loop[47] $end
$var wire 1 }1 t0 $end
$var wire 1 ~1 t1 $end
$var wire 1 !2 t2 $end
$var wire 1 "2 t3 $end
$upscope $end
$scope begin mux_loop[48] $end
$var wire 1 #2 t0 $end
$var wire 1 $2 t1 $end
$var wire 1 %2 t2 $end
$var wire 1 &2 t3 $end
$upscope $end
$scope begin mux_loop[49] $end
$var wire 1 '2 t0 $end
$var wire 1 (2 t1 $end
$var wire 1 )2 t2 $end
$var wire 1 *2 t3 $end
$upscope $end
$scope begin mux_loop[50] $end
$var wire 1 +2 t0 $end
$var wire 1 ,2 t1 $end
$var wire 1 -2 t2 $end
$var wire 1 .2 t3 $end
$upscope $end
$scope begin mux_loop[51] $end
$var wire 1 /2 t0 $end
$var wire 1 02 t1 $end
$var wire 1 12 t2 $end
$var wire 1 22 t3 $end
$upscope $end
$scope begin mux_loop[52] $end
$var wire 1 32 t0 $end
$var wire 1 42 t1 $end
$var wire 1 52 t2 $end
$var wire 1 62 t3 $end
$upscope $end
$scope begin mux_loop[53] $end
$var wire 1 72 t0 $end
$var wire 1 82 t1 $end
$var wire 1 92 t2 $end
$var wire 1 :2 t3 $end
$upscope $end
$scope begin mux_loop[54] $end
$var wire 1 ;2 t0 $end
$var wire 1 <2 t1 $end
$var wire 1 =2 t2 $end
$var wire 1 >2 t3 $end
$upscope $end
$scope begin mux_loop[55] $end
$var wire 1 ?2 t0 $end
$var wire 1 @2 t1 $end
$var wire 1 A2 t2 $end
$var wire 1 B2 t3 $end
$upscope $end
$scope begin mux_loop[56] $end
$var wire 1 C2 t0 $end
$var wire 1 D2 t1 $end
$var wire 1 E2 t2 $end
$var wire 1 F2 t3 $end
$upscope $end
$scope begin mux_loop[57] $end
$var wire 1 G2 t0 $end
$var wire 1 H2 t1 $end
$var wire 1 I2 t2 $end
$var wire 1 J2 t3 $end
$upscope $end
$scope begin mux_loop[58] $end
$var wire 1 K2 t0 $end
$var wire 1 L2 t1 $end
$var wire 1 M2 t2 $end
$var wire 1 N2 t3 $end
$upscope $end
$scope begin mux_loop[59] $end
$var wire 1 O2 t0 $end
$var wire 1 P2 t1 $end
$var wire 1 Q2 t2 $end
$var wire 1 R2 t3 $end
$upscope $end
$scope begin mux_loop[60] $end
$var wire 1 S2 t0 $end
$var wire 1 T2 t1 $end
$var wire 1 U2 t2 $end
$var wire 1 V2 t3 $end
$upscope $end
$scope begin mux_loop[61] $end
$var wire 1 W2 t0 $end
$var wire 1 X2 t1 $end
$var wire 1 Y2 t2 $end
$var wire 1 Z2 t3 $end
$upscope $end
$scope begin mux_loop[62] $end
$var wire 1 [2 t0 $end
$var wire 1 \2 t1 $end
$var wire 1 ]2 t2 $end
$var wire 1 ^2 t3 $end
$upscope $end
$scope begin mux_loop[63] $end
$var wire 1 _2 t0 $end
$var wire 1 `2 t1 $end
$var wire 1 a2 t2 $end
$var wire 1 b2 t3 $end
$upscope $end
$upscope $end
$upscope $end
$scope module mem_wb $end
$var wire 64 c2 MEM_Alu_result [63:0] $end
$var wire 1 B MEM_MemtoReg $end
$var wire 5 d2 MEM_Rd [4:0] $end
$var wire 1 > MEM_RegWrite $end
$var wire 64 e2 MemReadData [63:0] $end
$var wire 1 ! clk $end
$var wire 1 " reset $end
$var reg 64 f2 WB_Alu_result [63:0] $end
$var reg 64 g2 WB_MemReadData [63:0] $end
$var reg 1 3 WB_MemtoReg $end
$var reg 5 h2 WB_Rd [4:0] $end
$var reg 1 1 WB_RegWrite $end
$upscope $end
$scope module rf $end
$var wire 1 1 RegWrite $end
$var wire 1 ! clk $end
$var wire 5 i2 rd [4:0] $end
$var wire 1 " reset $end
$var wire 5 j2 rs1 [4:0] $end
$var wire 5 k2 rs2 [4:0] $end
$var wire 64 l2 write_data [63:0] $end
$var wire 64 m2 read_data2 [63:0] $end
$var wire 64 n2 read_data1 [63:0] $end
$var integer 32 o2 i [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b100000 o2
b0 n2
b0 m2
b0 l2
b0 k2
b0 j2
b0 i2
b0 h2
b0 g2
b0 f2
b0 e2
b0 d2
b0 c2
0b2
0a2
0`2
0_2
0^2
0]2
0\2
0[2
0Z2
0Y2
0X2
0W2
0V2
0U2
0T2
0S2
0R2
0Q2
0P2
0O2
0N2
0M2
0L2
0K2
0J2
0I2
0H2
0G2
0F2
0E2
0D2
0C2
0B2
0A2
0@2
0?2
0>2
0=2
0<2
0;2
0:2
092
082
072
062
052
042
032
022
012
002
0/2
0.2
0-2
0,2
0+2
0*2
0)2
0(2
0'2
0&2
0%2
0$2
0#2
0"2
0!2
0~1
0}1
0|1
0{1
0z1
0y1
0x1
0w1
0v1
0u1
0t1
0s1
0r1
0q1
0p1
0o1
0n1
0m1
0l1
0k1
0j1
0i1
0h1
0g1
0f1
0e1
0d1
0c1
0b1
0a1
0`1
0_1
0^1
0]1
0\1
0[1
0Z1
0Y1
0X1
0W1
0V1
0U1
0T1
0S1
0R1
0Q1
0P1
0O1
0N1
0M1
0L1
0K1
0J1
0I1
0H1
0G1
0F1
0E1
0D1
0C1
0B1
0A1
0@1
0?1
0>1
0=1
0<1
0;1
0:1
091
081
071
061
051
041
031
021
011
001
0/1
0.1
0-1
0,1
0+1
0*1
0)1
0(1
0'1
0&1
0%1
0$1
0#1
0"1
0!1
0~0
0}0
0|0
0{0
0z0
0y0
0x0
0w0
0v0
0u0
0t0
0s0
0r0
0q0
0p0
0o0
0n0
0m0
0l0
0k0
0j0
0i0
0h0
0g0
0f0
0e0
0d0
0c0
0b0
0a0
0`0
0_0
0^0
0]0
0\0
0[0
0Z0
0Y0
0X0
0W0
0V0
0U0
0T0
0S0
0R0
0Q0
0P0
0O0
0N0
0M0
0L0
0K0
0J0
0I0
0H0
0G0
0F0
0E0
0D0
0C0
0B0
0A0
0@0
0?0
0>0
0=0
0<0
0;0
0:0
090
080
070
060
050
040
030
020
010
000
0/0
0.0
0-0
0,0
0+0
0*0
0)0
0(0
0'0
0&0
0%0
0$0
0#0
0"0
0!0
0~/
0}/
b0 |/
b11 {/
b0 z/
b0 y/
b0 x/
b0 w/
b0 v/
b0 u/
b0 t/
b0 s/
b0 r/
b0 q/
b0 p/
b11 o/
b0 n/
0m/
0l/
0k/
0j/
1i/
0h/
0g/
0f/
0e/
0d/
0c/
1b/
1a/
1`/
1_/
1^/
b0 ]/
1\/
b1000001000001010110011 [/
b0 Z/
b0 Y/
b0 X/
b1000001000001010110011 W/
b0 V/
b0 U/
b0 T/
b0 S/
b0 R/
b0 Q/
b0 P/
b0 O/
b0 N/
b0 M/
b0 L/
b0 K/
b0 J/
b0 I/
b0 H/
b0 G/
b0 F/
b0 E/
b0 D/
b0 C/
b0 B/
b0 A/
b0 @/
b0 ?/
b0 >/
b0 =/
b0 </
b0 ;/
b0 :/
b0 9/
b0 8/
b0 7/
b0 6/
b0 5/
b0 4/
b0 3/
b0 2/
b0 1/
b0 0/
b0 //
0./
0-/
0,/
0+/
0*/
0)/
0(/
b0 '/
1&/
1%/
1$/
1#/
1"/
0!/
0~.
0}.
0|.
0{.
1z.
1y.
1x.
1w.
1v.
0u.
0t.
0s.
0r.
1q.
1p.
1o.
1n.
1m.
0l.
0k.
0j.
0i.
1h.
1g.
1f.
1e.
1d.
0c.
0b.
0a.
0`.
1_.
1^.
1].
1\.
1[.
0Z.
0Y.
0X.
0W.
1V.
1U.
1T.
1S.
1R.
0Q.
0P.
0O.
0N.
1M.
1L.
1K.
1J.
1I.
0H.
0G.
0F.
0E.
1D.
1C.
1B.
1A.
1@.
0?.
0>.
0=.
0<.
1;.
1:.
19.
18.
17.
06.
05.
04.
03.
12.
11.
10.
1/.
1..
0-.
0,.
0+.
0*.
1).
1(.
1'.
1&.
1%.
0$.
0#.
0".
0!.
1~-
1}-
1|-
1{-
1z-
0y-
0x-
0w-
0v-
1u-
1t-
1s-
1r-
1q-
0p-
0o-
0n-
0m-
1l-
1k-
1j-
1i-
1h-
0g-
0f-
0e-
0d-
1c-
1b-
1a-
1`-
1_-
0^-
0]-
0\-
0[-
1Z-
1Y-
1X-
1W-
1V-
0U-
0T-
0S-
0R-
1Q-
1P-
1O-
1N-
1M-
0L-
0K-
0J-
0I-
1H-
1G-
1F-
1E-
1D-
0C-
0B-
0A-
0@-
1?-
1>-
1=-
1<-
1;-
0:-
09-
08-
07-
16-
15-
14-
13-
12-
01-
00-
0/-
0.-
1--
1,-
1+-
1*-
1)-
0(-
0'-
0&-
0%-
1$-
1#-
1"-
1!-
1~,
0},
0|,
0{,
0z,
1y,
1x,
1w,
1v,
1u,
0t,
0s,
0r,
0q,
1p,
1o,
1n,
1m,
1l,
0k,
0j,
0i,
0h,
1g,
1f,
1e,
1d,
1c,
0b,
0a,
0`,
0_,
1^,
1],
1\,
1[,
1Z,
0Y,
0X,
0W,
0V,
1U,
1T,
1S,
1R,
1Q,
0P,
0O,
0N,
0M,
1L,
1K,
1J,
1I,
1H,
0G,
0F,
0E,
0D,
1C,
1B,
1A,
1@,
1?,
0>,
0=,
0<,
0;,
1:,
19,
18,
17,
16,
05,
04,
03,
02,
11,
10,
1/,
1.,
1-,
0,,
0+,
0*,
0),
1(,
1',
1&,
1%,
1$,
0#,
0",
0!,
0~+
1}+
1|+
1{+
1z+
1y+
0x+
0w+
0v+
0u+
1t+
1s+
1r+
1q+
1p+
0o+
0n+
0m+
0l+
1k+
1j+
1i+
1h+
1g+
0f+
0e+
0d+
0c+
1b+
1a+
1`+
1_+
1^+
0]+
0\+
0[+
0Z+
1Y+
1X+
1W+
1V+
1U+
0T+
0S+
0R+
0Q+
1P+
1O+
1N+
1M+
1L+
0K+
0J+
0I+
0H+
1G+
1F+
1E+
1D+
1C+
0B+
0A+
0@+
0?+
1>+
1=+
1<+
1;+
1:+
09+
08+
07+
06+
15+
14+
13+
12+
11+
00+
0/+
0.+
0-+
1,+
1++
1*+
1)+
1(+
0'+
0&+
0%+
0$+
1#+
1"+
1!+
1~*
1}*
0|*
0{*
0z*
0y*
1x*
1w*
1v*
1u*
1t*
0s*
0r*
0q*
0p*
1o*
1n*
1m*
1l*
1k*
0j*
0i*
0h*
0g*
1f*
1e*
1d*
1c*
1b*
0a*
0`*
0_*
0^*
1]*
1\*
1[*
1Z*
1Y*
0X*
0W*
0V*
0U*
1T*
1S*
1R*
1Q*
1P*
0O*
0N*
0M*
0L*
1K*
1J*
1I*
1H*
1G*
0F*
0E*
0D*
0C*
1B*
1A*
1@*
1?*
1>*
0=*
0<*
0;*
0:*
19*
18*
17*
16*
15*
04*
03*
02*
01*
10*
1/*
1.*
1-*
1,*
0+*
0**
0)*
0(*
1'*
1&*
1%*
1$*
1#*
0"*
0!*
0~)
0})
1|)
1{)
1z)
1y)
1x)
0w)
0v)
0u)
0t)
1s)
1r)
1q)
1p)
1o)
0n)
0m)
0l)
0k)
1j)
1i)
1h)
1g)
1f)
0e)
0d)
0c)
0b)
1a)
1`)
1_)
1^)
1])
0\)
0[)
0Z)
0Y)
1X)
1W)
1V)
1U)
1T)
0S)
0R)
0Q)
0P)
1O)
1N)
1M)
1L)
1K)
0J)
0I)
0H)
0G)
1F)
1E)
1D)
1C)
1B)
0A)
0@)
0?)
0>)
1=)
1<)
1;)
1:)
19)
08)
07)
06)
05)
14)
13)
12)
11)
10)
0/)
0.)
0-)
0,)
1+)
1*)
1))
1()
1')
0&)
0%)
0$)
0#)
1")
1!)
1~(
1}(
1|(
0{(
0z(
0y(
0x(
1w(
1v(
1u(
1t(
1s(
0r(
0q(
0p(
b11111111111111111111111111111111111111111111111111111111111111111 o(
b0 n(
b0 m(
1l(
b1111111111111111111111111111111111111111111111111111111111111111 k(
b0 j(
b1111111111111111111111111111111111111111111111111111111111111111 i(
b0 h(
b1111111111111111111111111111111111111111111111111111111111111111 g(
b0 f(
b0 e(
b0 d(
b0 c(
b0 b(
b0 a(
b0 `(
b0 _(
b0 ^(
0](
0\(
0[(
0Z(
0Y(
0X(
0W(
0V(
0U(
0T(
0S(
0R(
0Q(
0P(
0O(
0N(
0M(
0L(
0K(
0J(
0I(
0H(
0G(
0F(
0E(
0D(
0C(
0B(
0A(
0@(
0?(
0>(
0=(
0<(
0;(
0:(
09(
08(
07(
06(
05(
04(
03(
02(
01(
00(
0/(
0.(
0-(
0,(
0+(
0*(
0)(
0((
0'(
0&(
0%(
0$(
0#(
0"(
0!(
0~'
0}'
0|'
0{'
0z'
0y'
0x'
0w'
0v'
0u'
0t'
0s'
0r'
0q'
0p'
0o'
0n'
0m'
0l'
0k'
0j'
0i'
0h'
0g'
0f'
0e'
0d'
0c'
0b'
0a'
0`'
0_'
0^'
0]'
0\'
0['
0Z'
0Y'
0X'
0W'
0V'
0U'
0T'
0S'
0R'
0Q'
0P'
0O'
0N'
0M'
0L'
0K'
0J'
0I'
0H'
0G'
0F'
0E'
0D'
0C'
0B'
0A'
0@'
0?'
0>'
0='
0<'
0;'
0:'
09'
08'
07'
06'
05'
04'
03'
02'
01'
00'
0/'
0.'
0-'
0,'
0+'
0*'
0)'
0('
0''
0&'
0%'
0$'
0#'
0"'
0!'
0~&
0}&
0|&
0{&
0z&
0y&
0x&
0w&
0v&
0u&
0t&
0s&
0r&
0q&
0p&
0o&
0n&
0m&
0l&
0k&
0j&
0i&
0h&
0g&
0f&
0e&
0d&
0c&
0b&
0a&
0`&
0_&
0^&
0]&
0\&
0[&
0Z&
0Y&
0X&
0W&
0V&
0U&
0T&
0S&
0R&
0Q&
0P&
0O&
0N&
0M&
0L&
0K&
0J&
0I&
0H&
0G&
0F&
0E&
0D&
0C&
0B&
0A&
0@&
0?&
0>&
0=&
0<&
0;&
0:&
09&
08&
07&
06&
05&
04&
03&
02&
01&
00&
0/&
0.&
0-&
0,&
0+&
0*&
0)&
0(&
0'&
0&&
0%&
0$&
0#&
0"&
0!&
0~%
0}%
0|%
0{%
0z%
0y%
0x%
0w%
0v%
0u%
0t%
0s%
0r%
0q%
0p%
0o%
0n%
0m%
0l%
0k%
0j%
0i%
0h%
0g%
0f%
0e%
0d%
0c%
0b%
0a%
0`%
0_%
0^%
0]%
0\%
0[%
0Z%
0Y%
0X%
0W%
0V%
0U%
0T%
0S%
0R%
0Q%
0P%
0O%
0N%
0M%
0L%
0K%
0J%
0I%
0H%
0G%
0F%
0E%
0D%
0C%
0B%
0A%
0@%
0?%
0>%
0=%
0<%
0;%
0:%
09%
08%
07%
06%
05%
04%
03%
02%
01%
00%
0/%
0.%
0-%
0,%
0+%
0*%
0)%
0(%
0'%
0&%
0%%
0$%
0#%
0"%
0!%
0~$
0}$
0|$
0{$
0z$
0y$
0x$
0w$
0v$
0u$
0t$
0s$
0r$
0q$
0p$
0o$
0n$
0m$
0l$
0k$
0j$
0i$
0h$
0g$
0f$
0e$
0d$
0c$
0b$
0a$
0`$
0_$
0^$
0]$
0\$
0[$
0Z$
0Y$
0X$
0W$
0V$
0U$
0T$
0S$
0R$
0Q$
0P$
0O$
0N$
0M$
0L$
0K$
0J$
0I$
0H$
0G$
0F$
0E$
0D$
0C$
0B$
0A$
0@$
0?$
0>$
0=$
0<$
0;$
0:$
09$
08$
07$
06$
05$
04$
03$
02$
01$
00$
0/$
0.$
0-$
0,$
0+$
0*$
0)$
0($
0'$
0&$
0%$
0$$
0#$
0"$
0!$
0~#
0}#
0|#
0{#
0z#
0y#
0x#
0w#
0v#
0u#
0t#
0s#
0r#
0q#
0p#
0o#
0n#
0m#
0l#
0k#
0j#
0i#
0h#
0g#
0f#
0e#
0d#
0c#
0b#
0a#
0`#
0_#
0^#
0]#
0\#
0[#
0Z#
0Y#
0X#
0W#
0V#
0U#
0T#
0S#
0R#
0Q#
0P#
0O#
0N#
0M#
0L#
0K#
0J#
0I#
0H#
0G#
0F#
0E#
0D#
0C#
0B#
0A#
0@#
0?#
0>#
0=#
0<#
0;#
0:#
09#
08#
07#
06#
05#
04#
03#
02#
01#
00#
0/#
0.#
0-#
0,#
0+#
0*#
0)#
0(#
0'#
0&#
0%#
0$#
0##
0"#
0!#
0~"
0}"
0|"
0{"
0z"
0y"
0x"
0w"
0v"
0u"
0t"
0s"
0r"
0q"
0p"
0o"
0n"
0m"
0l"
0k"
0j"
0i"
0h"
0g"
0f"
0e"
0d"
0c"
0b"
0a"
0`"
0_"
0^"
0]"
0\"
0["
0Z"
0Y"
0X"
0W"
0V"
0U"
0T"
0S"
0R"
b0 Q"
b0 P"
b0 O"
0N"
b0 M"
b0 L"
b0 K"
0J"
b0 I"
b0 H"
b0 G"
1F"
b0 E"
b0 D"
b0 C"
b10 B"
0A"
0@"
0?"
0>"
0="
0<"
0;"
0:"
09"
08"
07"
16"
05"
04"
03"
02"
b10 1"
b0 0"
0/"
0."
0-"
1,"
b10 +"
b110 *"
b10 )"
b10 ("
b0 '"
b10 &"
0%"
0$"
0#"
b0 ""
0!"
1~
1}
1|
1{
1z
0y
0x
1w
0v
0u
0t
1s
0r
b110 q
b10 p
b0 o
0n
0m
0l
0k
0j
0i
b0 h
b10 g
b0 f
0e
b0 d
b0 c
b0 b
0a
0`
b0 _
0^
0]
0\
b0 [
b0 Z
0Y
0X
0W
b0 V
b0 U
b0 T
0S
b0 R
b0 Q
b0 P
b0 O
b0 N
b0 M
b0 L
b0 K
1J
b1000001000001010110011 I
b0 H
b0 G
0F
0E
0D
0C
0B
b0 A
b0 @
b0 ?
0>
0=
b0 <
0;
0:
19
b0 8
b0 7
06
b0 5
b0 4
03
b0 2
01
b0 0
b0 /
0.
b0 -
b0 ,
b0 +
b1 *
b1 )
b0 (
b0 '
b0 &
1%
0$
0#
1"
0!
$end
#5000
b100000 o2
1!
#10000
0!
0"
#15000
0~/
0(0
b0 H
b0 L/
b0 p/
b0 |/
0#0
b11 o/
b11 {/
1\/
0i
1n
0c/
0e
16
b10 h
b10 D/
0k
0m
0i/
0f/
0:
0=
0}.
b10 f
b10 //
1~.
0e/
0k/
0%/
0$/
b10000000010 v/
b10000000010 y/
0a/
0`/
1j/
1l/
1h/
b1010 7
b1010 J/
b1010 m2
b101 8
b101 K/
b101 n2
1)/
1*/
1-/
1./
b110011 n/
b10 t/
b10 w/
b10 s/
b101 r/
b101 x/
b101 q/
b10000000010 u/
b10 &
b10 B/
b10 G/
b10 k2
b1 '
b1 A/
b1 F/
b1 j2
b101 (
b101 E/
b110011 +
b110011 '/
b10 *
b1000000000000010000001100110011 I
b1000000000000010000001100110011 W/
b1000000000000010000001100110011 [/
b1000001000001010110011 L
b1000001000001010110011 X/
b1000001000001010110011 ]/
1F
b10 )
b1 o
b1 V/
b1 Z/
1!
#20000
0!
#25000
0F"
0z.
1{.
0x.
0y.
0q.
1r.
0o.
0p.
0h.
1i.
0f.
0g.
0_.
1`.
0].
0^.
0V.
1W.
0T.
0U.
0M.
1N.
0K.
0L.
0D.
1E.
0B.
0C.
0;.
1<.
09.
0:.
02.
13.
00.
01.
0).
1*.
0'.
0(.
0~-
1!.
0|-
0}-
0u-
1v-
0s-
0t-
0l-
1m-
0j-
0k-
0c-
1d-
0a-
0b-
0Z-
1[-
0X-
0Y-
0Q-
1R-
0O-
0P-
0H-
1I-
0F-
0G-
0?-
1@-
0=-
0>-
06-
17-
04-
05-
0--
1.-
0+-
0,-
0$-
1%-
0"-
0#-
0y,
1z,
0w,
0x,
0p,
1q,
0n,
0o,
0g,
1h,
0e,
0f,
0^,
1_,
0\,
0],
0U,
1V,
0S,
0T,
0L,
1M,
0J,
0K,
0C,
1D,
0A,
0B,
0:,
1;,
08,
09,
01,
12,
0/,
00,
0(,
1),
0&,
0',
0}+
1~+
0{+
0|+
0t+
1u+
0r+
0s+
0k+
1l+
0i+
0j+
0b+
1c+
0`+
0a+
0Y+
1Z+
0W+
0X+
0P+
1Q+
0N+
0O+
0G+
1H+
0E+
0F+
0>+
1?+
0<+
0=+
05+
16+
03+
04+
0,+
1-+
0*+
0++
0#+
1$+
0!+
0"+
0x*
1y*
0v*
0w*
0o*
1p*
0m*
0n*
0f*
1g*
0d*
0e*
0]*
1^*
0[*
0\*
0T*
1U*
0R*
0S*
0K*
1L*
0I*
0J*
0B*
1C*
0@*
0A*
09*
1:*
07*
08*
00*
11*
0.*
0/*
0'*
1(*
0%*
0&*
0|)
1})
0z)
0{)
0s)
1t)
0q)
0r)
0j)
1k)
0h)
0i)
0a)
1b)
0_)
0`)
0X)
1Y)
0V)
0W)
0O)
1P)
0M)
0N)
0F)
1G)
0D)
0E)
0=)
0))
1>)
0;)
0*)
0<)
1#)
0")
15)
b1011 o(
04)
0|(
0~(
00)
02)
1c"
1u"
0}(
01)
0%
b1111 b
b1111 K"
b1111 3/
1^"
1p"
b1111111111111111111111111111111111111111111111111111111111110101 g(
b1111111111111111111111111111111111111111111111111111111111110101 i(
b1111111111111111111111111111111111111111111111111111111111110101 k(
1Z"
b1111 I"
b1111 O"
b1111 P"
1l"
1x(
b1111111111111111111111111111111111111111111111111111111111111011 E"
b1111111111111111111111111111111111111111111111111111111111111011 f(
b1111111111111111111111111111111111111111111111111111111111111011 m(
b1111111111111111111111111111111111111111111111111111111111111011 n(
0,)
1_"
1q"
1U"
1g"
b1111 G"
b1111 c(
0s(
1q(
1r(
0')
1%)
0&)
06"
b1010 /
b1010 D"
b1010 M"
b1010 _(
b1010 b(
b1010 e(
b1010 h(
1R"
1d"
1p(
1$)
18"
0,"
b1010 c
b1010 5/
b101 d
b101 C"
b101 L"
b101 ^(
b101 a(
b101 d(
b101 j(
1."
b1000000011 v/
b1000000011 y/
b0 7
b0 J/
b0 m2
b1010 8
b1010 K/
b1010 n2
b11 *
b10000011111001110110011 I
b10000011111001110110011 W/
b10000011111001110110011 [/
b10000000000 t/
b10000000000 w/
b10000000000 s/
b10000000110 r/
b10000000110 x/
b10000000110 q/
b1000000011 u/
1.
b100000 ,
b0 &
b0 B/
b0 G/
b0 k2
b10 '
b10 A/
b10 F/
b10 j2
b110 (
b110 E/
b11 )
b10 o
b10 V/
b10 Z/
b101 V
b101 6/
b101 C/
b101 O/
b10 Q
b10 =/
b10 S/
b1 R
b1 >/
b1 R/
b1010 T
b1010 Q/
b101 U
b101 P/
b10 _
b10 '"
b10 0"
b10 M/
1S
b1000000000000010000001100110011 L
b1000000000000010000001100110011 X/
b1000000000000010000001100110011 ]/
b1 K
b1 I/
b1 Y/
1!
#30000
0!
#35000
1F"
1z.
0{.
1x.
1y.
1q.
0r.
1o.
1p.
1h.
0i.
1f.
1g.
1_.
0`.
1].
1^.
1V.
0W.
1T.
1U.
1M.
0N.
1K.
1L.
1D.
0E.
1B.
1C.
1;.
0<.
19.
1:.
12.
03.
10.
11.
1).
0*.
1'.
1(.
1~-
0!.
1|-
1}-
1u-
0v-
1s-
1t-
1l-
0m-
1j-
1k-
1c-
0d-
1a-
1b-
1Z-
0[-
1X-
1Y-
1Q-
0R-
1O-
1P-
1H-
0I-
1F-
1G-
1?-
0@-
1=-
1>-
16-
07-
14-
15-
1--
0.-
1+-
1,-
1$-
0%-
1"-
1#-
1y,
0z,
1w,
1x,
1p,
0q,
1n,
1o,
1g,
0h,
1e,
1f,
1^,
0_,
1\,
1],
1U,
0V,
1S,
1T,
1L,
0M,
1J,
1K,
1C,
0D,
1A,
1B,
1:,
0;,
18,
19,
11,
02,
1/,
10,
1(,
0),
1&,
1',
1}+
0~+
1{+
1|+
1t+
0u+
1r+
1s+
1k+
0l+
1i+
1j+
1b+
0c+
1`+
1a+
1Y+
0Z+
1W+
1X+
1P+
0Q+
1N+
1O+
1G+
0H+
1E+
1F+
1>+
0?+
1<+
1=+
15+
06+
13+
14+
1,+
0-+
1*+
1++
1#+
0$+
1!+
1"+
1x*
0y*
1v*
1w*
1o*
0p*
1m*
1n*
1f*
0g*
1d*
1e*
1]*
0^*
1[*
1\*
1T*
0U*
1R*
1S*
1K*
0L*
1I*
1J*
1B*
0C*
1@*
1A*
19*
0:*
17*
18*
10*
01*
1.*
1/*
1'*
0(*
1%*
1&*
1|)
0})
1z)
1{)
1s)
0t)
1q)
1r)
1j)
0k)
1h)
1i)
1a)
0b)
1_)
1`)
1X)
0Y)
1V)
1W)
1O)
0P)
1M)
1N)
1F)
12)
0G)
1D)
1E)
1=)
1z(
1~(
1.)
0~"
1))
0>)
1;)
1}(
11)
0j"
b1010 b
b1010 K"
b1010 3/
0|"
1*)
13)
1<)
b110 g
b110 ("
b110 1"
b110 B"
b1111111111111111111111111111111111111111111111111111111111111111 g(
b1111111111111111111111111111111111111111111111111111111111111111 i(
b1111111111111111111111111111111111111111111111111111111111111111 k(
0Z"
1c"
0b"
0l"
b1010 I"
b1010 O"
b1010 P"
1u"
b0 Q"
0t"
0x(
1#)
1")
0,)
1+)
b1010 E"
b1010 f(
b1010 m(
b1010 n(
15)
b11111111111111111111111111111111111111111111111111111111111111111 o(
14)
1<"
0_"
0q"
0U"
1^"
0\"
0g"
1p"
0n"
b0 H"
b0 `(
b1010 G"
b1010 c(
1s(
0q(
0r(
0|(
1{(
1')
0%)
00)
1/)
b0 /
b0 D"
b0 M"
b0 _(
b0 b(
b0 e(
b0 h(
0R"
1["
0d"
1m"
0p(
1y(
0$)
1-)
b10000000011 v/
b10000000011 y/
b1001 7
b1001 J/
b1001 m2
b1100 8
b1100 K/
b1100 n2
b110 &"
b110 +"
1t
b0 c
b0 5/
b1010 d
b1010 C"
b1010 L"
b1010 ^(
b1010 a(
b1010 d(
b1010 j(
b100 t/
b100 w/
b100 s/
b111 r/
b111 x/
b111 q/
b10000000011 u/
0.
b0 ,
b111 -
b111 H/
b100 &
b100 B/
b100 G/
b100 k2
b11 '
b11 A/
b11 F/
b11 j2
b111 (
b111 E/
1u
b100 *
b10000011110010000110011 I
b10000011110010000110011 W/
b10000011110010000110011 [/
b10000011111001110110011 L
b10000011111001110110011 X/
b10000011111001110110011 ]/
b10 K
b10 I/
b10 Y/
1]
b110 V
b110 6/
b110 C/
b110 O/
b0 Q
b0 =/
b0 S/
b10 R
b10 >/
b10 R/
b0 T
b0 Q/
b1010 U
b1010 P/
b1 O
b1 4/
b1 P
b1 U/
b101 @
b101 9/
b101 ;/
b101 d2
b1010 ?
b1010 0/
b1010 :/
b1111 G
b1111 1/
b1111 7/
b1111 c2
0F
1>
b100 )
b11 o
b11 V/
b11 Z/
1!
#40000
0!
#45000
0))
0*)
0")
0~(
0!)
1~"
1x(
b11111111111111111111111111111111111111111111111111111111111111001 o(
0w(
05)
0%
1|"
0s(
0u(
10)
0.)
02)
08"
1Z"
0u"
b10000 Q"
1t"
0t(
01)
b0 g
b0 ("
b0 1"
b0 B"
04"
1U"
0p"
1n"
b1000 H"
b1000 `(
b1111111111111111111111111111111111111111111111111111111111110110 g(
b1111111111111111111111111111111111111111111111111111111111110110 i(
b1111111111111111111111111111111111111111111111111111111111110110 k(
0c"
b10101 I"
b10101 O"
b10101 P"
1l"
b1000 b
b1000 K"
b1000 3/
1#)
b11 E"
b11 f(
b11 m(
b11 n(
0,)
0<"
0s
1V"
1q"
0^"
1g"
b1101 G"
b1101 c(
1|(
0z(
0{(
0')
1%)
0&)
0r
0w
b1001 /
b1001 D"
b1001 M"
b1001 _(
b1001 b(
b1001 e(
b1001 h(
0["
1d"
0y(
1$)
b0 &"
b0 +"
0t
0z
0{
0x
1y
0|
b1001 c
b1001 5/
b1100 d
b1100 C"
b1100 L"
b1100 ^(
b1100 a(
b1100 d(
b1100 j(
b100 v/
b100 y/
b101 *
b1101100001011010010000011 I
b1101100001011010010000011 W/
b1101100001011010010000011 [/
b1111 0
b1111 l2
0u
1%"
1$"
1#"
b1000 r/
b1000 x/
b1000 q/
b100 u/
b110 -
b110 H/
b1000 (
b1000 E/
b101 )
b100 o
b100 V/
b100 Z/
b101 2
b101 </
b101 h2
b101 i2
b1111 5
b1111 f2
11
b1 A
b1 8/
b110 @
b110 9/
b110 ;/
b110 d2
b0 ?
b0 0/
b0 :/
b1010 G
b1010 1/
b1010 7/
b1010 c2
0]
b111 [
b111 ""
b111 T/
b111 V
b111 6/
b111 C/
b111 O/
b100 Q
b100 =/
b100 S/
b11 R
b11 >/
b11 R/
b1001 T
b1001 Q/
b1100 U
b1100 P/
b10 O
b10 4/
b10 P
b10 U/
b10000011110010000110011 L
b10000011110010000110011 X/
b10000011110010000110011 ]/
b11 K
b11 I/
b11 Y/
1!
#50000
0!
#55000
b11011 H
b11011 L/
b11011 p/
b11011 |/
1}/
1#0
1+0
1/0
b0 o/
b0 {/
0\/
b1101 b
b1101 K"
b1101 3/
1c/
1i
b1 g
b1 ("
b1 1"
b1 B"
1e
14"
1e/
b0 h
b0 D/
1k
1m
1:
1=
1}.
1i/
b0 f
b0 //
0~.
b1 &"
b1 +"
1r
1%/
1$/
0~
1x
b10000000100 v/
b10000000100 y/
1a/
1`/
b0 7
b0 J/
b0 m2
b101 8
b101 K/
b101 n2
0)/
0*/
0y
1z
b11 n/
b11011 t/
b11011 w/
b11011 s/
b1001 r/
b1001 x/
b1001 q/
b10000000100 u/
b11 -
b11 H/
b11011 &
b11011 B/
b11011 G/
b11011 k2
b1 '
b1 A/
b1 F/
b1 j2
b1001 (
b1001 E/
b11 +
b11 '/
0%"
b1010 0
b1010 l2
b110 *
b1100001011011000100011 I
b1100001011011000100011 W/
b1100001011011000100011 [/
b1101100001011010010000011 L
b1101100001011010010000011 X/
b1101100001011010010000011 ]/
b100 K
b100 I/
b100 Y/
b110 [
b110 ""
b110 T/
b1000 V
b1000 6/
b1000 C/
b1000 O/
b11 O
b11 4/
b11 P
b11 U/
b10 A
b10 8/
b111 @
b111 9/
b111 ;/
b111 d2
b1001 ?
b1001 0/
b1001 :/
b1000 G
b1000 1/
b1000 7/
b1000 c2
b110 2
b110 </
b110 h2
b110 i2
b1010 5
b1010 f2
b110 )
b101 o
b101 V/
b101 Z/
1!
#60000
0!
#65000
0F"
0z.
1{.
0x.
0y.
0q.
1r.
0o.
0p.
0h.
1i.
0f.
0g.
0_.
1`.
0].
0^.
0V.
1W.
0T.
0U.
0M.
1N.
0K.
0L.
0D.
1E.
0B.
0C.
0;.
1<.
09.
0:.
02.
13.
00.
01.
0).
1*.
0'.
0(.
0~-
1!.
0|-
0}-
0u-
1v-
0s-
0t-
0l-
1m-
0j-
0k-
0c-
1d-
0a-
0b-
0Z-
1[-
0X-
0Y-
0Q-
1R-
0O-
0P-
0H-
1I-
0F-
0G-
0?-
1@-
0=-
0>-
06-
17-
04-
05-
0--
1.-
0+-
0,-
0$-
1%-
0"-
0#-
0y,
1z,
0w,
0x,
0p,
1q,
0n,
0o,
0g,
1h,
0e,
0f,
0^,
1_,
0\,
0],
0U,
1V,
0S,
0T,
0L,
1M,
0J,
0K,
0C,
1D,
0A,
0B,
0:,
1;,
08,
09,
01,
12,
0/,
00,
0(,
1),
0&,
0',
0}+
1~+
0{+
0|+
0t+
1u+
0r+
0s+
0k+
1l+
0i+
0j+
0b+
1c+
0`+
0a+
0Y+
1Z+
0W+
0X+
0P+
1Q+
0N+
0O+
0G+
1H+
0E+
0F+
0>+
1?+
0<+
0=+
05+
16+
03+
04+
0,+
1-+
0*+
0++
0#+
1$+
0!+
0"+
0x*
1y*
0v*
0w*
0o*
1p*
0m*
0n*
0f*
1g*
0d*
0e*
0]*
1^*
0[*
0\*
0T*
1U*
0R*
0S*
0K*
1L*
0I*
0J*
0B*
1C*
0@*
0A*
09*
1:*
07*
08*
00*
11*
0.*
0/*
0'*
1(*
0%*
0&*
0|)
1})
0z)
0{)
0s)
1t)
0q)
0r)
0j)
1k)
0h)
0i)
0a)
0%
1b)
0_)
0`)
0X)
1Y)
0V)
1r"
0W)
1s"
0O)
1k"
1P)
0M)
0l"
1f"
0N)
1j"
0F)
1b"
1G)
0D)
0}/
0#0
1`"
0E)
1(0
1,0
0n
1a"
1|"
1!)
0<)
1)#
1#)
0>)
0=)
06
1t
1s
0Z"
1Y"
0u"
1t"
0x(
1w(
b1111111111111111111111111111111111111111111111111111111111101010 E"
b1111111111111111111111111111111111111111111111111111111111101010 f(
b1111111111111111111111111111111111111111111111111111111111101010 m(
b1111111111111111111111111111111111111111111111111111111111101010 n(
15)
b1011 o(
04)
1'#
0|(
09)
0;)
0e/
b1 o/
b1 {/
1l
0k
0m
0:
0=
0}.
1v
1!"
0U"
1S"
1p"
0n"
b1 H"
b1 `(
1s(
1r(
00)
0/)
b10 g
b10 ("
b10 1"
b10 B"
16"
0c"
b100000 I"
b100000 O"
b100000 P"
0~"
b111110 Q"
1}"
b100000 b
b100000 K"
b100000 3/
0}(
0:)
b1100 H
b1100 L/
b1100 p/
b1100 |/
0i/
1f/
1;
1!/
0}
b1111 &"
b1111 +"
1r
1R"
0m"
1p(
0-)
04"
1,"
1^"
1y"
1{"
b11111 G"
b11111 c(
b1111111111111111111111111111111111111111111111111111111111100100 g(
b1111111111111111111111111111111111111111111111111111111111100100 i(
b1111111111111111111111111111111111111111111111111111111111100100 k(
0+0
0/0
1k/
0%/
0z
0x
1|
b0 c
b0 5/
b101 d
b101 C"
b101 L"
b101 ^(
b101 a(
b101 d(
b101 j(
0."
1_"
1z"
b110 v/
b110 y/
0a/
b1100 7
b1100 J/
b1100 m2
1)/
b111 *
b1000000010000011000010100110011 I
b1000000010000011000010100110011 W/
b1000000010000011000010100110011 [/
b1000 0
b1000 l2
1%"
0#"
b11011 /
b11011 D"
b11011 M"
b11011 _(
b11011 b(
b11011 e(
b11011 h(
b100011 n/
b11 t/
b11 w/
b11 s/
b1100 r/
b1100 x/
b1100 q/
b110 u/
b11 &
b11 B/
b11 G/
b11 k2
b1100 (
b1100 E/
b100011 +
b100011 '/
b111 )
b110 o
b110 V/
b110 Z/
b111 2
b111 </
b111 h2
b111 i2
b1000 5
b1000 f2
b11 A
b11 8/
b1000 @
b1000 9/
b1000 ;/
b1000 d2
b1101 G
b1101 1/
b1101 7/
b1101 c2
b11 [
b11 ""
b11 T/
b1001 V
b1001 6/
b1001 C/
b1001 O/
b11011 Q
b11011 =/
b11011 S/
b1 R
b1 >/
b1 R/
b11011 Z
b11011 N/
b0 T
b0 Q/
b101 U
b101 P/
b11111 O
b11111 4/
b100 P
b100 U/
b0 _
b0 '"
b0 0"
b0 M/
1^
1Y
1W
b1100001011011000100011 L
b1100001011011000100011 X/
b1100001011011000100011 ]/
b101 K
b101 I/
b101 Y/
1!
#70000
0!
#75000
0'0
0G0
1\/
0,0
1&)
15)
0c/
1*)
13)
b11 o/
b11 {/
0i
1n
0e
0f"
0)#
1x(
0#)
1")
0,)
b1111 o(
1+)
b1111111111111111111111111111111111111111111111111111111111111001 E"
b1111111111111111111111111111111111111111111111111111111111111001 f(
b1111111111111111111111111111111111111111111111111111111111111001 m(
b1111111111111111111111111111111111111111111111111111111111111001 n(
1>)
0f/
16
b10 h
b10 D/
0l
0;
0!/
0a"
0j"
b10001 b
b10001 K"
b10001 3/
0'#
0s(
1q(
1u(
1|(
1~(
1')
0%)
19)
b0 H
b0 L/
b0 p/
b0 |/
0k/
b10 f
b10 //
1~.
1Z"
0Y"
0c"
0b"
0l"
b10001 I"
b10001 O"
b10001 P"
1~"
b11000 Q"
0}"
1t(
1}(
0()
1:)
0H0
0$0
0(0
0$/
1U"
0S"
0^"
0`"
0g"
1e"
0i"
0y"
0{"
b100 H"
b100 `(
b1101 G"
b1101 c(
b1111111111111111111111111111111111111111111111111111111111110011 g(
b1111111111111111111111111111111111111111111111111111111111110011 i(
b1111111111111111111111111111111111111111111111111111111111110011 k(
b1000000101 v/
b1000000101 y/
0`/
b1001 7
b1001 J/
b1001 m2
b1100 8
b1100 K/
b1100 n2
1*/
0V"
0_"
1h"
0z"
b1100 c
b1100 5/
b110011 n/
b10000000100 t/
b10000000100 w/
b10000000100 s/
b10000001010 r/
b10000001010 x/
b10000001010 q/
b1000000101 u/
1.
b100000 ,
b0 -
b0 H/
b100 &
b100 B/
b100 G/
b100 k2
b11 '
b11 A/
b11 F/
b11 j2
b1010 (
b1010 E/
b110011 +
b110011 '/
b1100 /
b1100 D"
b1100 M"
b1100 _(
b1100 b(
b1100 e(
b1100 h(
b101101 <
b101101 2/
b101101 e2
b1101 0
b1101 l2
b1000 *
b10001010000010110110011 I
b10001010000010110110011 W/
b10001010000010110110011 [/
b1000000010000011000010100110011 L
b1000000010000011000010100110011 X/
b1000000010000011000010100110011 ]/
b110 K
b110 I/
b110 Y/
b1100 V
b1100 6/
b1100 C/
b1100 O/
b11 Q
b11 =/
b11 S/
b1100 Z
b1100 N/
b1100 T
b1100 Q/
b10001 O
b10001 4/
b101 P
b101 U/
1X
0Y
0W
0S
b11111 A
b11111 8/
b1001 @
b1001 9/
b1001 ;/
b1001 d2
b0 ?
b0 0/
b0 :/
b100000 G
b100000 1/
b100000 7/
b100000 c2
1D
1B
b1000 2
b1000 </
b1000 h2
b1000 i2
b1101 5
b1101 f2
b1000 )
b111 o
b111 V/
b111 Z/
1!
#80000
0!
#85000
1F"
1z.
0{.
1x.
1y.
1q.
0r.
1o.
1p.
1h.
0i.
1f.
1g.
1_.
0`.
1].
1^.
1V.
0W.
1T.
1U.
1M.
0N.
1K.
1L.
1D.
0E.
1B.
1C.
1;.
0<.
19.
1:.
12.
03.
10.
11.
1).
0*.
1'.
1(.
1~-
0!.
1|-
1}-
1u-
0v-
1s-
1t-
1l-
0m-
1j-
1k-
1c-
0d-
1a-
1b-
1Z-
0[-
1X-
1Y-
1Q-
0R-
1O-
1P-
1H-
0I-
1F-
1G-
1?-
0@-
1=-
1>-
16-
07-
14-
15-
1--
0.-
1+-
1,-
1$-
0%-
1"-
1#-
1y,
0z,
1w,
1x,
1p,
0q,
1n,
1o,
1g,
0h,
1e,
1f,
1^,
0_,
1\,
1],
1U,
0V,
1S,
1T,
1L,
0M,
1J,
1K,
1C,
0D,
1A,
1B,
1:,
0;,
18,
19,
11,
02,
1/,
10,
1(,
0),
1&,
1',
1}+
0~+
1{+
1|+
1t+
0u+
1r+
1s+
1k+
0l+
1i+
1j+
1b+
0c+
1`+
1a+
1Y+
0Z+
1W+
1X+
1P+
0Q+
1N+
1O+
1G+
0H+
1E+
1F+
1>+
0?+
1<+
1=+
15+
06+
13+
14+
1,+
0-+
1*+
1++
1#+
0$+
1!+
1"+
1x*
0y*
1v*
1w*
1o*
0p*
1m*
1n*
1f*
0g*
1d*
1e*
1]*
0^*
1[*
1\*
1T*
0U*
1R*
1S*
1K*
0L*
1I*
1J*
1B*
0C*
1@*
1A*
19*
0:*
17*
18*
10*
01*
1.*
1/*
1'*
0(*
1%*
1&*
1|)
0})
1z)
1{)
1s)
0t)
1q)
1r)
1j)
0k)
1h)
1i)
1a)
0b)
1_)
1`)
1X)
0Y)
1V)
1W)
1O)
0&)
0P)
1M)
0*)
1N)
0")
1F)
1#)
0~(
0G)
1D)
0!)
1E)
0r"
0w(
0,)
1=)
0r
0s"
0u(
0')
1%)
0))
0>)
1;)
b110 &"
b110 +"
0v
0!"
1l"
b10000 Q"
0k"
0t(
1()
1<)
1}
1g"
0e"
b1111111111111111111111111111111111111111111111111111111111110110 g(
b1111111111111111111111111111111111111111111111111111111111110110 i(
b1111111111111111111111111111111111111111111111111111111111110110 k(
1Z"
b10101 I"
b10101 O"
b10101 P"
0u"
1x(
b11 E"
b11 f(
b11 m(
b11 n(
05)
b11111111111111111111111111111111111111111111111111111111111111001 o(
14)
0%
b11 b
b11 K"
b11 3/
1~
1u
1V"
0h"
1U"
0p"
1n"
0o"
b1000 H"
b1000 `(
b1101 G"
b1101 c(
0s(
0q(
0r(
10)
1/)
b110 g
b110 ("
b110 1"
b110 B"
06"
1w
b1001 /
b1001 D"
b1001 M"
b1001 _(
b1001 b(
b1001 e(
b1001 h(
0R"
1m"
0p(
1-)
04"
18"
1<"
0@"
0,"
1z
1{
b1001 c
b1001 5/
b1100 d
b1100 C"
b1100 L"
b1100 ^(
b1100 a(
b1100 d(
b1100 j(
1."
b10000000101 v/
b10000000101 y/
b0 8
b0 K/
b0 n2
b1001 *
b1000000101000001000010110110011 I
b1000000101000001000010110110011 W/
b1000000101000001000010110110011 [/
b101101 0
b101101 l2
b0 <
b0 2/
b0 e2
0%"
0$"
b100 t/
b100 w/
b100 s/
b1011 r/
b1011 x/
b1011 q/
b10000000101 u/
0.
b0 ,
b1010 '
b1010 A/
b1010 F/
b1010 j2
b1011 (
b1011 E/
b1001 )
b1000 o
b1000 V/
b1000 Z/
b1001 2
b1001 </
b1001 h2
b1001 i2
b101101 4
b101101 g2
b100000 5
b100000 f2
13
b10001 A
b10001 8/
b1100 @
b1100 9/
b1100 ;/
b1100 d2
b1100 ?
b1100 0/
b1100 :/
b10001 G
b10001 1/
b10001 7/
b10001 c2
1C
0D
0B
0>
1]
b0 [
b0 ""
b0 T/
b1010 V
b1010 6/
b1010 C/
b1010 O/
b100 Q
b100 =/
b100 S/
b11 R
b11 >/
b11 R/
b0 Z
b0 N/
b1001 T
b1001 Q/
b1100 U
b1100 P/
b110 O
b110 4/
b110 P
b110 U/
b10 _
b10 '"
b10 0"
b10 M/
0^
0X
1S
b10001010000010110110011 L
b10001010000010110110011 X/
b10001010000010110110011 ]/
b111 K
b111 I/
b111 Y/
1!
#90000
0!
#95000
0F"
0z.
1{.
0x.
0y.
0q.
1r.
0o.
0p.
0h.
1i.
0f.
0g.
0_.
1`.
0].
0^.
0V.
1W.
0T.
0U.
0M.
1N.
0K.
0L.
0D.
1E.
0B.
0C.
0;.
1<.
09.
0:.
02.
13.
00.
01.
0).
1*.
0'.
0(.
0~-
1!.
0|-
0}-
0u-
1v-
0s-
0t-
0l-
1m-
0j-
0k-
0c-
1d-
0a-
0b-
0Z-
1[-
0X-
0Y-
0Q-
1R-
0O-
0P-
0H-
1I-
0F-
0G-
0?-
1@-
0=-
0>-
06-
17-
04-
05-
0--
1.-
0+-
0,-
0$-
1%-
0"-
0#-
0y,
1z,
0w,
0x,
0p,
1q,
0n,
0o,
0g,
1h,
0e,
0f,
0^,
1_,
0\,
0],
0U,
1V,
0S,
0T,
0L,
1M,
0J,
0K,
0C,
1D,
0A,
0B,
0:,
1;,
08,
09,
01,
12,
0/,
00,
0(,
1),
0&,
0',
0}+
1~+
0{+
0|+
0t+
1u+
0r+
0s+
0k+
1l+
0i+
0j+
0b+
1c+
0`+
0a+
0Y+
1Z+
0W+
0X+
0P+
1Q+
0N+
0O+
0G+
1H+
0E+
0F+
0>+
1?+
0<+
0=+
05+
16+
03+
04+
0,+
1-+
0*+
0++
0#+
1$+
0!+
0"+
0x*
1y*
0v*
0w*
0o*
1p*
0m*
0n*
0f*
1g*
0d*
0e*
0]*
1^*
0[*
0\*
0T*
1U*
0R*
0S*
0K*
1L*
0I*
0J*
0B*
1C*
0@*
0A*
09*
1:*
07*
08*
00*
11*
0.*
0/*
0'*
1(*
0%*
0&*
0|)
1})
0z)
0{)
0s)
1t)
0q)
0r)
0j)
1k)
0h)
0i)
0a)
1b)
0_)
0`)
0X)
1Y)
0V)
0W)
0O)
1P)
0M)
0N)
0F)
1G)
0D)
1j"
0E)
1b"
0=)
1]"
0~"
1~(
1{(
1))
1>)
0;)
1a"
0|"
1!)
1*)
13)
0<)
b10 g
b10 ("
b10 1"
b10 B"
0Z"
1Y"
0c"
1l"
b1100 I"
b1100 O"
b1100 P"
1u"
b110 Q"
0t"
b1100 b
b1100 K"
b1100 3/
0x(
1w(
1#)
1")
0,)
1+)
b1111111111111111111111111111111111111111111111111111111111111010 E"
b1111111111111111111111111111111111111111111111111111111111111010 f(
b1111111111111111111111111111111111111111111111111111111111111010 m(
b1111111111111111111111111111111111111111111111111111111111111010 n(
15)
b1111 o(
04)
0<"
0U"
1S"
1^"
0g"
1p"
0n"
b1 H"
b1 `(
b1011 G"
b1011 c(
1s(
1r(
0|(
1z(
1')
0%)
00)
0/)
1R"
1["
0d"
0m"
1p(
1y(
0$)
0-)
b11000000101 v/
b11000000101 y/
b0 7
b0 J/
b0 m2
b101 8
b101 K/
b101 n2
b10 &"
b10 +"
0t
b11 d
b11 C"
b11 L"
b11 ^(
b11 a(
b11 d(
b11 j(
b10000001010 t/
b10000001010 w/
b10000001010 s/
b10000001011 r/
b10000001011 x/
b10000001011 q/
b11000000101 u/
1.
b100000 ,
b1010 &
b1010 B/
b1010 G/
b1010 k2
b1 '
b1 A/
b1 F/
b1 j2
0u
b10001 0
b10001 l2
b10 N
b10 ?/
b1010 *
b1011000011000110011 I
b1011000011000110011 W/
b1011000011000110011 [/
b1000000101000001000010110110011 L
b1000000101000001000010110110011 X/
b1000000101000001000010110110011 ]/
b1000 K
b1000 I/
b1000 Y/
0]
b1011 V
b1011 6/
b1011 C/
b1011 O/
b1010 R
b1010 >/
b1010 R/
b0 U
b0 P/
b111 O
b111 4/
b111 P
b111 U/
b110 A
b110 8/
b1010 @
b1010 9/
b1010 ;/
b1010 d2
b1001 ?
b1001 0/
b1001 :/
b11 G
b11 1/
b11 7/
b11 c2
0C
1>
b1100 2
b1100 </
b1100 h2
b1100 i2
b0 4
b0 g2
b10001 5
b10001 f2
03
01
b1010 )
b1001 o
b1001 V/
b1001 Z/
1!
#100000
0!
#105000
1F"
1z.
0{.
1x.
1y.
1q.
0r.
1o.
1p.
1h.
0i.
1f.
1g.
1_.
0`.
1].
1^.
1V.
0W.
1T.
1U.
1M.
0N.
1K.
1L.
1D.
0E.
1B.
1C.
1;.
0<.
19.
1:.
12.
03.
10.
11.
1).
0*.
1'.
1(.
1~-
0!.
1|-
1}-
1u-
0v-
1s-
1t-
1l-
0m-
1j-
1k-
1c-
0d-
1a-
1b-
1Z-
0[-
1X-
1Y-
1Q-
0R-
1O-
1P-
1H-
0I-
1F-
1G-
1?-
0@-
1=-
1>-
16-
07-
14-
15-
1--
0.-
1+-
1,-
1$-
0%-
1"-
1#-
1y,
0z,
1w,
1x,
1p,
0q,
1n,
1o,
1g,
0h,
1e,
1f,
1^,
0_,
1\,
1],
1U,
0V,
1S,
1T,
1L,
0M,
1J,
1K,
1C,
0D,
1A,
1B,
1:,
0;,
18,
19,
11,
02,
1/,
10,
1(,
0),
1&,
1',
1}+
0~+
1{+
1|+
1t+
0u+
1r+
1s+
1k+
0l+
1i+
1j+
1b+
0c+
1`+
1a+
1Y+
0Z+
1W+
1X+
1P+
0Q+
1N+
1O+
1G+
0H+
1E+
1F+
1>+
0?+
1<+
1=+
15+
06+
13+
14+
1,+
0-+
1*+
1++
1#+
0$+
1!+
1"+
1x*
0y*
1v*
1w*
1o*
0p*
1m*
1n*
1f*
0g*
1d*
1e*
1]*
0^*
1[*
1\*
1T*
0U*
1R*
1S*
1K*
0L*
1I*
1J*
1B*
0C*
1@*
1A*
19*
0:*
17*
18*
10*
01*
1.*
1/*
1'*
0(*
1%*
1&*
1|)
0})
1z)
1{)
1s)
0t)
1q)
1r)
1j)
0k)
1h)
1i)
1a)
0b)
1_)
1`)
1X)
0Y)
1V)
1W)
1O)
0P)
1M)
1N)
1F)
0G)
1D)
1E)
0))
1=)
0*)
0>)
1;)
1u"
0")
1<)
0~(
0x(
05)
b11111111111111111111111111111111111111111111111111111111111111011 o(
14)
0}(
1a"
1s(
0q(
0u(
10)
12)
1`"
0Z"
1Y"
0t(
11)
1j"
b10 b
b10 K"
b10 3/
1s"
b110 g
b110 ("
b110 1"
b110 B"
1_"
0U"
1S"
0p"
b1 H"
b1 `(
b1111111111111111111111111111111111111111111111111111111111111100 g(
b1111111111111111111111111111111111111111111111111111111111111100 i(
b1111111111111111111111111111111111111111111111111111111111111100 k(
0c"
1b"
b1000 I"
b1000 O"
b1000 P"
0l"
b1110 Q"
1k"
1#)
b10 E"
b10 f(
b10 m(
b10 n(
0,)
1<"
1V"
0q"
1^"
0]"
1g"
1f"
b111 G"
b111 c(
0|(
0z(
0{(
0')
1%)
0&)
b11 /
b11 D"
b11 M"
b11 _(
b11 b(
b11 e(
b11 h(
0["
1d"
0y(
1$)
b110 &"
b110 +"
1t
b11 c
b11 5/
b110 v/
b110 y/
b0 8
b0 K/
b0 n2
b1011 *
b11011011010000011 I
b11011011010000011 W/
b11011011010000011 [/
b11 0
b11 l2
b101 d
b101 C"
b101 L"
b101 ^(
b101 a(
b101 d(
b101 j(
1u
b1 M
b1 @/
b0 N
b0 ?/
b0 t/
b0 w/
b0 s/
b1100 r/
b1100 x/
b1100 q/
b110 u/
0.
b0 ,
b0 &
b0 B/
b0 G/
b0 k2
b1011 '
b1011 A/
b1011 F/
b1011 j2
b1100 (
b1100 E/
b1011 )
b1010 o
b1010 V/
b1010 Z/
b1010 2
b1010 </
b1010 h2
b1010 i2
b11 5
b11 f2
11
b111 A
b111 8/
b1011 @
b1011 9/
b1011 ;/
b1011 d2
b1100 G
b1100 1/
b1100 7/
b1100 c2
1]
b1010 Q
b1010 =/
b1010 S/
b1 R
b1 >/
b1 R/
b0 T
b0 Q/
b101 U
b101 P/
b1000 O
b1000 4/
b1000 P
b1000 U/
b1011000011000110011 L
b1011000011000110011 X/
b1011000011000110011 ]/
b1001 K
b1001 I/
b1001 Y/
1!
#110000
0!
#115000
1F"
1z.
0{.
1x.
1y.
1q.
0r.
1o.
1p.
1h.
0i.
1f.
1g.
1_.
0`.
1].
1^.
1V.
0W.
1T.
1U.
1M.
0N.
1K.
1L.
1D.
0E.
1B.
1C.
1;.
0<.
19.
1:.
12.
03.
10.
11.
1).
0*.
1'.
1(.
1~-
0!.
1|-
1}-
1u-
0v-
1s-
1t-
1l-
0m-
1j-
1k-
1c-
0d-
1a-
1b-
1Z-
0[-
1X-
1Y-
1Q-
0R-
1O-
1P-
1H-
0I-
1F-
1G-
1?-
0@-
1=-
1>-
16-
07-
14-
15-
1--
0.-
1+-
1,-
1$-
0%-
1"-
1#-
1y,
0z,
1w,
1x,
1p,
0q,
1n,
1o,
1g,
0h,
1e,
1f,
1^,
0_,
1\,
1],
1U,
0V,
1S,
1T,
1L,
0M,
1J,
1K,
1C,
0D,
1A,
1B,
1:,
0;,
18,
19,
11,
02,
1/,
10,
1(,
0),
1&,
1',
1}+
0~+
1{+
1|+
1t+
0u+
1r+
1s+
1k+
0l+
1i+
1j+
1b+
0c+
1`+
1a+
1Y+
0Z+
1W+
1X+
1P+
0Q+
1N+
1O+
1G+
0H+
1E+
1F+
1>+
0?+
1<+
1=+
15+
06+
13+
14+
1,+
0-+
1*+
1++
1#+
0$+
1!+
1"+
1x*
0y*
1v*
1w*
1o*
0p*
1m*
1n*
1f*
0g*
1d*
1e*
1]*
0^*
1[*
1\*
1T*
0U*
1R*
1S*
1K*
0L*
1I*
1J*
1B*
0C*
1@*
1A*
19*
0:*
17*
18*
10*
01*
1.*
1/*
1'*
0(*
1%*
1&*
1|)
0})
1z)
1{)
1s)
0t)
1q)
1r)
1j)
0k)
1h)
1i)
1a)
0b)
1_)
1`)
1X)
0Y)
1V)
1W)
1O)
0P)
1M)
1N)
1F)
0G)
1D)
1E)
1=)
1~(
0>)
1;)
b0 o/
b0 {/
0j"
1<)
0\/
0b"
14)
1u(
1z(
1c/
1i
0u"
1))
05)
12)
1t(
1}(
1e
0a"
0s"
1!)
1*)
13)
0`"
b1111111111111111111111111111111111111111111111111111111111111111 g(
b1111111111111111111111111111111111111111111111111111111111111111 i(
b1111111111111111111111111111111111111111111111111111111111111111 k(
1e/
b0 h
b0 D/
1k
1m
1:
1=
1}.
b10 g
b10 ("
b10 1"
b10 B"
0Z"
0Y"
1c"
b10 I"
b10 O"
b10 P"
0l"
b0 Q"
0k"
b10 b
b10 K"
b10 3/
0x(
1w(
1#)
1")
b10 E"
b10 f(
b10 m(
b10 n(
0,)
b11111111111111111111111111111111111111111111111111111111111111111 o(
1+)
0V"
0_"
1i/
b0 f
b0 //
0~.
0<"
0U"
0S"
1^"
0\"
0]"
0g"
0f"
b0 H"
b0 `(
b10 G"
b10 c(
1s(
0r(
0|(
1{(
1')
0%)
b0 /
b0 D"
b0 M"
b0 _(
b0 b(
b0 e(
b0 h(
1%/
1$/
0R"
1["
0d"
0p(
1y(
0$)
b0 c
b0 5/
b10000000110 v/
b10000000110 y/
1a/
1`/
b1100 8
b1100 K/
b1100 n2
0)/
0*/
b10 &"
b10 +"
0t
b10 d
b10 C"
b10 L"
b10 ^(
b10 a(
b10 d(
b10 j(
b11 n/
b1101 r/
b1101 x/
b1101 q/
b10000000110 u/
b11 -
b11 H/
b11 '
b11 A/
b11 F/
b11 j2
b1101 (
b1101 E/
b11 +
b11 '/
0u
b10 N
b10 ?/
b0 M
b0 @/
b1100 0
b1100 l2
b1100 *
b1101000011100110011 I
b1101000011100110011 W/
b1101000011100110011 [/
b11011011010000011 L
b11011011010000011 X/
b11011011010000011 ]/
b1010 K
b1010 I/
b1010 Y/
0]
b1100 V
b1100 6/
b1100 C/
b1100 O/
b0 Q
b0 =/
b0 S/
b1011 R
b1011 >/
b1011 R/
b0 U
b0 P/
b1001 O
b1001 4/
b1001 P
b1001 U/
b1000 A
b1000 8/
b11 ?
b11 0/
b11 :/
b10 G
b10 1/
b10 7/
b10 c2
b1011 2
b1011 </
b1011 h2
b1011 i2
b1100 5
b1100 f2
b1100 )
b1011 o
b1011 V/
b1011 Z/
1!
#120000
0!
#125000
1\/
b0 H
b0 L/
b0 p/
b0 |/
1t
1r
0c/
0$0
0(0
0,0
1v
1!"
b1100 b
b1100 K"
b1100 3/
0e
0}
0c"
1l"
b1100 I"
b1100 O"
b1100 P"
1u"
0#)
1,)
b1100 E"
b1100 f(
b1100 m(
b1100 n(
15)
0e/
b11 o/
b11 {/
0:
0=
0}.
0~
b1111 &"
b1111 +"
1s
0^"
1g"
1p"
b1100 G"
b1100 c(
1|(
0z(
0{(
0')
1%)
1&)
00)
1.)
1/)
16"
0i/
0f/
b10 f
b10 //
1~.
0w
0["
1d"
1m"
0y(
1$)
1-)
08"
1,"
0k/
0%/
0$/
0z
0{
b1100 d
b1100 C"
b1100 L"
b1100 ^(
b1100 a(
b1100 d(
b1100 j(
0."
0i
0k
0m
0n
b111 v/
b111 y/
0a/
0`/
b0 8
b0 K/
b0 n2
1)/
1*/
b1101 *
b11000010000101001100011 I
b11000010000101001100011 W/
b11000010000101001100011 [/
b10 0
b10 l2
1%"
1$"
b0 N
b0 ?/
1`
0J
09
b110011 n/
b1110 r/
b1110 x/
b1110 q/
b111 u/
b0 -
b0 H/
b1101 '
b1101 A/
b1101 F/
b1101 j2
b1110 (
b1110 E/
b110011 +
b110011 '/
b1101 )
b1100 o
b1100 V/
b1100 Z/
b10 5
b10 f2
b1001 A
b1001 8/
b1100 @
b1100 9/
b1100 ;/
b1100 d2
b0 ?
b0 0/
b0 :/
b11 [
b11 ""
b11 T/
b1101 V
b1101 6/
b1101 C/
b1101 O/
b11 R
b11 >/
b11 R/
b1100 U
b1100 P/
b1010 O
b1010 4/
b1010 P
b1010 U/
b0 _
b0 '"
b0 0"
b0 M/
1^
1Y
1W
b1101000011100110011 L
b1101000011100110011 X/
b1101000011100110011 ]/
b1011 K
b1011 I/
b1011 Y/
1!
#130000
0!
#135000
0t
0r
b10 &"
b10 +"
0v
0!"
1}
1~
1w
1z
1{
b10 h
b10 D/
1n
0%"
0$"
0`
1J
19
b1101 <
b1101 2/
b1101 e2
b10 N
b10 ?/
b0 [
b0 ""
b0 T/
b1110 V
b1110 6/
b1110 C/
b1110 O/
b1101 R
b1101 >/
b1101 R/
b0 U
b0 P/
b1011 O
b1011 4/
b1011 P
b1011 U/
0^
0Y
0W
0S
b1010 A
b1010 8/
b1101 @
b1101 9/
b1101 ;/
b1101 d2
b1100 G
b1100 1/
b1100 7/
b1100 c2
1D
1B
b1100 2
b1100 </
b1100 h2
b1100 i2
1!
#140000
0!
#145000
b1010 H
b1010 L/
b1010 p/
b1010 |/
1%0
1-0
b10 o/
b10 {/
0\/
1Z"
1x(
0%
b1101 b
b1101 K"
b1101 3/
1c/
0n
1U"
0s(
1q(
1r(
1l"
b1101 I"
b1101 O"
b1101 P"
1u"
1,)
b1101 E"
b1101 f(
b1101 m(
b1101 n(
15)
1d/
06
b1 h
b1 D/
1j
1R"
1p(
1g"
1p"
b1101 G"
b1101 c(
0')
1%)
1&)
00)
1.)
1/)
06"
1g/
1a
1|.
b1 f
b1 //
0~.
1d"
1m"
1$)
1-)
18"
0,"
0&/
1$/
b1101 d
b1101 C"
b1101 L"
b1101 ^(
b1101 a(
b1101 d(
b1101 j(
1."
b1010 v/
b1010 y/
0b/
1`/
b1010 7
b1010 J/
b1010 m2
b1010 8
b1010 K/
b1010 n2
1(/
0*/
b1110 *
b1100010000011110110011 I
b1100010000011110110011 W/
b1100010000011110110011 [/
b1101 0
b1101 l2
b0 <
b0 2/
b0 e2
b1 N
b1 ?/
b1100011 n/
b110 t/
b110 w/
b110 s/
b10100 r/
b10100 x/
b10100 q/
b1010 u/
b110 &
b110 B/
b110 G/
b110 k2
b10 '
b10 A/
b10 F/
b10 j2
b10100 (
b10100 E/
b1100011 +
b1100011 '/
b1110 )
b1101 o
b1101 V/
b1101 Z/
b1101 2
b1101 </
b1101 h2
b1101 i2
b1101 4
b1101 g2
b1100 5
b1100 f2
13
b1011 A
b1011 8/
b1110 @
b1110 9/
b1110 ;/
b1110 d2
0D
0B
0>
b10 _
b10 '"
b10 0"
b10 M/
1S
b11000010000101001100011 L
b11000010000101001100011 X/
b11000010000101001100011 ]/
b1100 K
b1100 I/
b1100 Y/
1!
#150000
0!
#155000
0~/
0$0
0(0
0,0
1%
0}/
0#0
1~"
05)
0%0
1n
1|"
0~(
10)
0.)
02)
1j"
1\/
16
0u"
1t"
b0 b
b0 K"
b0 3/
0}(
01)
0Z"
b10100 Q"
1b"
b10100 I"
b10100 O"
b10100 P"
1l"
0x(
0#)
b0 E"
b0 f(
b0 m(
b0 n(
0,)
b0 H
b0 L/
b0 p/
b0 |/
0c/
b11 o/
b11 {/
b10 h
b10 D/
0j
1~.
0p"
1n"
b1111111111111111111111111111111111111111111111111111111111110101 g(
b1111111111111111111111111111111111111111111111111111111111110101 i(
b1111111111111111111111111111111111111111111111111111111111110101 k(
0U"
1\"
0g"
b1010 H"
b1010 `(
b1010 G"
b1010 c(
1s(
0q(
0r(
1|(
0z(
1{(
1')
0%)
0&)
0!0
0)0
0-0
0I0
0d/
0a
b10 f
b10 //
0|.
1_"
1q"
b110 g
b110 ("
b110 1"
b110 B"
0R"
1["
0d"
0p(
1y(
0$)
0g/
1&/
0$/
b1010 /
b1010 D"
b1010 M"
b1010 _(
b1010 b(
b1010 e(
b1010 h(
08"
17"
1;"
b1010 d
b1010 C"
b1010 L"
b1010 ^(
b1010 a(
b1010 d(
b1010 j(
b10000000111 v/
b10000000111 y/
1b/
0`/
b1100 7
b1100 J/
b1100 m2
0(/
1*/
b1010 c
b1010 5/
0."
1-"
b110011 n/
b11 t/
b11 w/
b11 s/
b1111 r/
b1111 x/
b1111 q/
b10000000111 u/
b11 &
b11 B/
b11 G/
b11 k2
b1111 (
b1111 E/
b110011 +
b110011 '/
b1100 0
b1100 l2
b0 N
b0 ?/
b1111 *
b1100010000011110110011 L
b1100010000011110110011 X/
b1100010000011110110011 ]/
b1101 K
b1101 I/
b1101 Y/
b10100 V
b10100 6/
b10100 C/
b10100 O/
b110 Q
b110 =/
b110 S/
b10 R
b10 >/
b10 R/
b1010 Z
b1010 N/
b1010 T
b1010 Q/
b1010 U
b1010 P/
b10110 O
b10110 4/
b1100 P
b1100 U/
b1 _
b1 '"
b1 0"
b1 M/
1\
0S
b1101 G
b1101 1/
b1101 7/
b1101 c2
1>
b1110 2
b1110 </
b1110 h2
b1110 i2
b0 4
b0 g2
03
01
b1111 )
b1110 o
b1110 V/
b1110 Z/
1!
#160000
0!
#165000
0F"
0z.
1{.
0x.
0y.
0q.
1r.
0o.
0p.
0h.
1i.
0f.
0g.
0_.
1`.
0].
0^.
0V.
1W.
0T.
0U.
0M.
1N.
0K.
0L.
0D.
1E.
0B.
0C.
0;.
1<.
09.
0:.
02.
13.
00.
01.
0).
1*.
0'.
0(.
0~-
1!.
0|-
0}-
0u-
1v-
0s-
0t-
0l-
1m-
0j-
0k-
0c-
1d-
0a-
0b-
0Z-
1[-
0X-
0Y-
0Q-
1R-
0O-
0P-
0H-
1I-
0F-
0G-
0?-
1@-
0=-
0>-
06-
17-
04-
05-
0--
1.-
0+-
0,-
0$-
1%-
0"-
0#-
0y,
1z,
0w,
0x,
0p,
1q,
0n,
0o,
0g,
1h,
0e,
0f,
0^,
1_,
0\,
0],
0U,
1V,
0S,
0T,
0L,
1M,
0J,
0K,
0C,
1D,
0A,
0B,
0:,
1;,
08,
09,
01,
12,
0/,
00,
0(,
1),
0&,
0',
0}+
1~+
0{+
0|+
0t+
1u+
0r+
0s+
0k+
1l+
0i+
0j+
0b+
1c+
0`+
0a+
0Y+
1Z+
0W+
0X+
0P+
1Q+
0N+
0O+
0G+
1H+
0E+
0F+
0>+
1?+
0<+
0=+
05+
16+
03+
04+
0,+
1-+
0*+
0++
0#+
1$+
0!+
0"+
0x*
1y*
0v*
0w*
0o*
1p*
0m*
0n*
0f*
1g*
0d*
0e*
0]*
1^*
0[*
0\*
0T*
1U*
0R*
0S*
0K*
1L*
0I*
0J*
0B*
1C*
0@*
0A*
09*
1:*
07*
08*
00*
11*
0.*
0/*
0'*
1(*
0%*
0&*
0|)
1})
0z)
0{)
0s)
1t)
0q)
0r)
0j)
1k)
0h)
0i)
0a)
1b)
0_)
0`)
0X)
1Y)
0V)
0W)
0O)
1P)
0M)
0N)
0F)
1G)
0D)
0E)
0=)
1>)
0;)
0<)
04)
15)
0/)
03)
0u"
0r"
0o"
1#)
b1111111111111111111111111111111111111111111111111111111111111110 E"
b1111111111111111111111111111111111111111111111111111111111111110 f(
b1111111111111111111111111111111111111111111111111111111111111110 m(
b1111111111111111111111111111111111111111111111111111111111111110 n(
1,)
b111 o(
0+)
0j"
0s"
0|(
1z(
1~(
0')
0))
1c"
0b"
b10110 I"
b10110 O"
b10110 P"
1l"
b10000 Q"
0k"
1}(
0()
1^"
0\"
1g"
0i"
b1000 H"
b1000 `(
b1110 G"
b1110 c(
b1111111111111111111111111111111111111111111111111111111111110011 g(
b1111111111111111111111111111111111111111111111111111111111110011 i(
b1111111111111111111111111111111111111111111111111111111111110011 k(
0%
b10110 b
b10110 K"
b10110 3/
0_"
1h"
18"
b10 g
b10 ("
b10 1"
b10 B"
b1100 /
b1100 D"
b1100 M"
b1100 _(
b1100 b(
b1100 e(
b1100 h(
1."
07"
0;"
b1100 c
b1100 5/
0-"
b10110 *
b1101 0
b1101 l2
1$
1#
b10000 )
b1111 o
b1111 V/
b1111 Z/
b1101 5
b1101 f2
11
b10110 A
b10110 8/
b10100 @
b10100 9/
b10100 ;/
b10100 d2
b1010 ?
b1010 0/
b1010 :/
b0 G
b0 1/
b0 7/
b0 c2
1F
1E
0>
b1111 V
b1111 6/
b1111 C/
b1111 O/
b11 Q
b11 =/
b11 S/
b0 Z
b0 N/
b1100 T
b1100 Q/
b1101 O
b1101 4/
b1101 P
b1101 U/
b10 _
b10 '"
b10 0"
b10 M/
0\
1S
b1110 K
b1110 I/
b1110 Y/
1!
#170000
0!
#175000
1F"
1z.
0{.
1x.
1y.
1q.
0r.
1o.
1p.
1h.
0i.
1f.
1g.
1_.
0`.
1].
1^.
1V.
0W.
1T.
1U.
1M.
0N.
1K.
1L.
1D.
0E.
1B.
1C.
1;.
0<.
19.
1:.
12.
03.
10.
11.
1).
0*.
1'.
1(.
1~-
0!.
1|-
1}-
1u-
0v-
1s-
1t-
1l-
0m-
1j-
1k-
1c-
0d-
1a-
1b-
1Z-
0[-
1X-
1Y-
1Q-
0R-
1O-
1P-
1H-
0I-
1F-
1G-
1?-
0@-
1=-
1>-
16-
07-
14-
15-
1--
0.-
1+-
1,-
1$-
0%-
1"-
1#-
1y,
0z,
1w,
1x,
1p,
0q,
1n,
1o,
1g,
0h,
1e,
1f,
1^,
0_,
1\,
1],
1U,
0V,
1S,
1T,
1L,
0M,
1J,
1K,
1C,
0D,
1A,
1B,
1:,
0;,
18,
19,
11,
02,
1/,
10,
1(,
0),
1&,
1',
1}+
0~+
1{+
1|+
1t+
0u+
1r+
1s+
1k+
0l+
1i+
1j+
1b+
0c+
1`+
1a+
1Y+
0Z+
1W+
1X+
1P+
0Q+
1N+
1O+
1G+
0H+
1E+
1F+
1>+
0?+
1<+
1=+
15+
06+
13+
14+
1,+
0-+
1*+
1++
1#+
0$+
1!+
1"+
1x*
0y*
1v*
1w*
1o*
0p*
1m*
1n*
1f*
0g*
1d*
1e*
1]*
0^*
1[*
1\*
1T*
0U*
1R*
1S*
1K*
0L*
1I*
1J*
1B*
0C*
1@*
1A*
19*
0:*
17*
18*
10*
01*
1.*
1/*
1'*
0(*
1%*
1&*
1|)
0})
1z)
1{)
1s)
0t)
1q)
1r)
1j)
0k)
1h)
1i)
1a)
0b)
1_)
1`)
1X)
0Y)
1V)
1W)
1O)
0P)
1M)
1N)
1F)
0G)
1D)
1E)
1=)
0>)
1;)
1<)
14)
12)
13)
0,)
b11111111111111111111111111111111111111111111111111111111111111111 o(
1+)
1%
1')
1))
0~"
0n
0l"
1()
11)
b0 b
b0 K"
b0 3/
0|"
06
b0 h
b0 D/
0g"
b1111111111111111111111111111111111111111111111111111111111111111 g(
b1111111111111111111111111111111111111111111111111111111111111111 i(
b1111111111111111111111111111111111111111111111111111111111111111 k(
0c"
b0 I"
b0 O"
b0 P"
0u"
b0 Q"
0t"
0#)
b0 E"
b0 f(
b0 m(
b0 n(
05)
1i/
b0 f
b0 //
0~.
0h"
0q"
0^"
0p"
0n"
b0 H"
b0 `(
b0 G"
b0 c(
1|(
0z(
0{(
10)
16"
1%/
1$/
b0 /
b0 D"
b0 M"
b0 _(
b0 b(
b0 e(
b0 h(
0["
0m"
0y(
0-)
08"
1,"
b0 v/
b0 y/
1a/
1`/
0j/
0l/
0h/
b0 7
b0 J/
b0 m2
b0 8
b0 K/
b0 n2
0)/
0*/
0-/
0./
b0 c
b0 5/
b0 d
b0 C"
b0 L"
b0 ^(
b0 a(
b0 d(
b0 j(
0."
b0 n/
b0 t/
b0 w/
b0 s/
b0 r/
b0 x/
b0 q/
b0 u/
b0 &
b0 B/
b0 G/
b0 k2
b0 '
b0 A/
b0 F/
b0 j2
b0 (
b0 E/
b0 +
b0 '/
b10111 *
0$
0#
b0 0
b0 l2
b10000011000100000110011 I
b10000011000100000110011 W/
b10000011000100000110011 [/
b0 L
b0 X/
b0 ]/
b0 K
b0 I/
b0 Y/
b0 V
b0 6/
b0 C/
b0 O/
b0 Q
b0 =/
b0 S/
b0 R
b0 >/
b0 R/
b0 T
b0 Q/
b0 U
b0 P/
b0 O
b0 4/
b0 P
b0 U/
b0 _
b0 '"
b0 0"
b0 M/
0S
b0 A
b0 8/
b0 @
b0 9/
b0 ;/
b0 d2
b0 ?
b0 0/
b0 :/
0F
0E
b10100 2
b10100 </
b10100 h2
b10100 i2
b0 5
b0 f2
01
b10111 )
b10110 o
b10110 V/
b10110 Z/
1!
#180000
0!
#185000
000
b0 H
b0 L/
b0 p/
b0 |/
0'0
b11 o/
b11 {/
1\/
0i
1n
0c/
0e
16
b10 h
b10 D/
0k
0m
0i/
0f/
0:
0=
0}.
b10 f
b10 //
1~.
0e/
0k/
0%/
0$/
b1000 v/
b1000 y/
0a/
0`/
1j/
1l/
1h/
b1001 7
b1001 J/
b1001 m2
b1100 8
b1100 K/
b1100 n2
1)/
1*/
1-/
1./
b11000 *
b111101101000101001100011 I
b111101101000101001100011 W/
b111101101000101001100011 [/
b110011 n/
b100 t/
b100 w/
b100 s/
b10000 r/
b10000 x/
b10000 q/
b1000 u/
b100 &
b100 B/
b100 G/
b100 k2
b11 '
b11 A/
b11 F/
b11 j2
b10000 (
b10000 E/
b110011 +
b110011 '/
b11000 )
b10111 o
b10111 V/
b10111 Z/
b0 2
b0 </
b0 h2
b0 i2
1F
b10000011000100000110011 L
b10000011000100000110011 X/
b10000011000100000110011 ]/
b10110 K
b10110 I/
b10110 Y/
1!
#190000
0!
#195000
0))
b1010 H
b1010 L/
b1010 p/
b1010 |/
0*)
1%0
1-0
0")
1#)
0~(
0!)
b10 o/
b10 {/
1~"
1x(
b11111111111111111111111111111111111111111111111111111111111111001 o(
0w(
0\/
1|"
0s(
0u(
02)
1c/
0n
1Z"
b10000 Q"
1t"
0t(
01)
0%
b10101 b
b10101 K"
b10101 3/
1d/
06
b1 h
b1 D/
1j
1U"
1n"
b1000 H"
b1000 `(
b1111111111111111111111111111111111111111111111111111111111110110 g(
b1111111111111111111111111111111111111111111111111111111111110110 i(
b1111111111111111111111111111111111111111111111111111111111110110 k(
1l"
b10101 I"
b10101 O"
b10101 P"
0u"
0,)
b11 E"
b11 f(
b11 m(
b11 n(
05)
1g/
1a
1|.
b1 f
b1 //
0~.
1V"
1q"
1g"
0p"
b1101 G"
b1101 c(
0')
1%)
0&)
10)
0.)
1/)
06"
0&/
1$/
b1001 /
b1001 D"
b1001 M"
b1001 _(
b1001 b(
b1001 e(
b1001 h(
1d"
1m"
1$)
1-)
18"
0,"
b1010 v/
b1010 y/
0b/
1`/
b0 7
b0 J/
b0 m2
b1101 8
b1101 K/
b1101 n2
1(/
0*/
b1001 c
b1001 5/
b1100 d
b1100 C"
b1100 L"
b1100 ^(
b1100 a(
b1100 d(
b1100 j(
1."
b1100011 n/
b1111 t/
b1111 w/
b1111 s/
b10100 r/
b10100 x/
b10100 q/
b1010 u/
b1111 &
b1111 B/
b1111 G/
b1111 k2
b1101 '
b1101 A/
b1101 F/
b1101 j2
b10100 (
b10100 E/
b1100011 +
b1100011 '/
b11001 *
b111001101000100010110011 I
b111001101000100010110011 W/
b111001101000100010110011 [/
b111101101000101001100011 L
b111101101000101001100011 X/
b111101101000101001100011 ]/
b10111 K
b10111 I/
b10111 Y/
b10000 V
b10000 6/
b10000 C/
b10000 O/
b100 Q
b100 =/
b100 S/
b11 R
b11 >/
b11 R/
b1001 T
b1001 Q/
b1100 U
b1100 P/
b10110 O
b10110 4/
b10110 P
b10110 U/
b10 _
b10 '"
b10 0"
b10 M/
1S
b11001 )
b11000 o
b11000 V/
b11000 Z/
1!
#200000
0!
#205000
1,)
1))
1&)
1*)
0~/
000
0~"
15)
1")
0#0
0'0
0+0
0%
0|"
1q(
1u(
00)
1.)
12)
0c"
0#)
1~(
0-0
1n
1u"
0t"
1t(
11)
0a"
1!)
1\/
16
1p"
0n"
b1111111111111111111111111111111111111111111111111111111111111111 g(
b1111111111111111111111111111111111111111111111111111111111111111 i(
b1111111111111111111111111111111111111111111111111111111111111111 k(
b1101 I"
b1101 O"
b1101 P"
1Z"
b0 Q"
0Y"
b1101 E"
b1101 f(
b1101 m(
b1101 n(
1x(
b11111111111111111111111111111111111111111111111111111111111111111 o(
1w(
b1101 b
b1101 K"
b1101 3/
b0 H
b0 L/
b0 p/
b0 |/
0c/
b11 o/
b11 {/
b10 h
b10 D/
0j
1~.
0V"
0q"
1U"
0S"
b0 H"
b0 `(
0s(
1r(
b110 g
b110 ("
b110 1"
b110 B"
0%0
0I0
0d/
0a
b10 f
b10 //
0|.
b0 /
b0 D"
b0 M"
b0 _(
b0 b(
b0 e(
b0 h(
1R"
1p(
08"
17"
1;"
0g/
1&/
0$/
b0 c
b0 5/
b1101 d
b1101 C"
b1101 L"
b1101 ^(
b1101 a(
b1101 d(
b1101 j(
0."
1-"
b10000001000 v/
b10000001000 y/
1b/
0`/
b1101 7
b1101 J/
b1101 m2
0(/
1*/
b11010 *
b111001101000000000110011 I
b111001101000000000110011 W/
b111001101000000000110011 [/
b110011 n/
b1110 t/
b1110 w/
b1110 s/
b10001 r/
b10001 x/
b10001 q/
b10000001000 u/
b1110 &
b1110 B/
b1110 G/
b1110 k2
b10001 (
b10001 E/
b110011 +
b110011 '/
b11010 )
b11001 o
b11001 V/
b11001 Z/
b10110 A
b10110 8/
b10000 @
b10000 9/
b10000 ;/
b10000 d2
b1001 ?
b1001 0/
b1001 :/
b10101 G
b10101 1/
b10101 7/
b10101 c2
0F
1>
b10100 V
b10100 6/
b10100 C/
b10100 O/
b1111 Q
b1111 =/
b1111 S/
b1101 R
b1101 >/
b1101 R/
b1010 Z
b1010 N/
b0 T
b0 Q/
b1101 U
b1101 P/
b100001 O
b100001 4/
b10111 P
b10111 U/
b1 _
b1 '"
b1 0"
b1 M/
1\
0S
b111001101000100010110011 L
b111001101000100010110011 X/
b111001101000100010110011 ]/
b11000 K
b11000 I/
b11000 Y/
1!
#210000
0!
#215000
1c"
1r"
1o"
1~"
0x(
0,)
b0 E"
b0 f(
b0 m(
b0 n(
05)
1a"
1s"
1|"
1s(
0q(
0u(
1')
0%)
0))
10)
0.)
02)
0Z"
1Y"
0l"
1k"
b11010 I"
b11010 O"
b11010 P"
1u"
b11010 Q"
1t"
0t(
0()
01)
0U"
1S"
0g"
1e"
0p"
1n"
b1101 H"
b1101 `(
b1111111111111111111111111111111111111111111111111111111111110010 g(
b1111111111111111111111111111111111111111111111111111111111110010 i(
b1111111111111111111111111111111111111111111111111111111111110010 k(
0%
b11010 b
b11010 K"
b11010 3/
1V"
1h"
1q"
18"
b10 g
b10 ("
b10 1"
b10 B"
b1101 /
b1101 D"
b1101 M"
b1101 _(
b1101 b(
b1101 e(
b1101 h(
1."
07"
0;"
b0 v/
b0 y/
b1101 c
b1101 5/
0-"
b0 r/
b0 x/
b0 q/
b0 u/
b0 (
b0 E/
b10101 0
b10101 l2
b11011 *
b1000000111001101000011010110011 I
b1000000111001101000011010110011 W/
b1000000111001101000011010110011 [/
b111001101000000000110011 L
b111001101000000000110011 X/
b111001101000000000110011 ]/
b11001 K
b11001 I/
b11001 Y/
b10001 V
b10001 6/
b10001 C/
b10001 O/
b1110 Q
b1110 =/
b1110 S/
b0 Z
b0 N/
b1101 T
b1101 Q/
b11000 O
b11000 4/
b11000 P
b11000 U/
b10 _
b10 '"
b10 0"
b10 M/
0\
1S
b100001 A
b100001 8/
b10100 @
b10100 9/
b10100 ;/
b10100 d2
b0 ?
b0 0/
b0 :/
b1101 G
b1101 1/
b1101 7/
b1101 c2
1E
0>
b10000 2
b10000 </
b10000 h2
b10000 i2
b10101 5
b10101 f2
11
b11011 )
b11010 o
b11010 V/
b11010 Z/
1!
#220000
0!
#225000
b11000000110 v/
b11000000110 y/
b11100 *
b0 I
b0 W/
b0 [/
b1101 0
b1101 l2
b10000001110 t/
b10000001110 w/
b10000001110 s/
b10000001101 r/
b10000001101 x/
b10000001101 q/
b11000000110 u/
1.
b100000 ,
b1101 (
b1101 E/
b11100 )
b11011 o
b11011 V/
b11011 Z/
b10100 2
b10100 </
b10100 h2
b10100 i2
b1101 5
b1101 f2
01
b11000 A
b11000 8/
b10001 @
b10001 9/
b10001 ;/
b10001 d2
b1101 ?
b1101 0/
b1101 :/
b11010 G
b11010 1/
b11010 7/
b11010 c2
0E
1>
b0 V
b0 6/
b0 C/
b0 O/
b11001 O
b11001 4/
b11001 P
b11001 U/
b1000000111001101000011010110011 L
b1000000111001101000011010110011 X/
b1000000111001101000011010110011 ]/
b11010 K
b11010 I/
b11010 Y/
1!
#230000
0!
#235000
0n
1%
b0 b
b0 K"
b0 3/
06
b0 h
b0 D/
b110 g
b110 ("
b110 1"
b110 B"
1i/
b0 f
b0 //
0~.
1<"
1%/
1$/
b0 v/
b0 y/
1a/
1`/
0j/
0l/
0h/
b0 7
b0 J/
b0 m2
b0 8
b0 K/
b0 n2
0)/
0*/
0-/
0./
b110 &"
b110 +"
1t
b0 n/
b0 t/
b0 w/
b0 s/
b0 r/
b0 x/
b0 q/
b0 u/
0.
b0 ,
b0 &
b0 B/
b0 G/
b0 k2
b0 '
b0 A/
b0 F/
b0 j2
b0 (
b0 E/
b0 +
b0 '/
1u
b11010 0
b11010 l2
b11101 *
b0 L
b0 X/
b0 ]/
b11011 K
b11011 I/
b11011 Y/
1]
b1101 V
b1101 6/
b1101 C/
b1101 O/
b11010 O
b11010 4/
b11010 P
b11010 U/
b11001 A
b11001 8/
b0 @
b0 9/
b0 ;/
b0 d2
b10001 2
b10001 </
b10001 h2
b10001 i2
b11010 5
b11010 f2
11
b11101 )
b11100 o
b11100 V/
b11100 Z/
1!
#240000
0!
#245000
1F"
1z.
0{.
1x.
1y.
1q.
0r.
1o.
1p.
1h.
0i.
1f.
1g.
1_.
0`.
1].
1^.
1V.
0W.
1T.
1U.
1M.
0N.
1K.
1L.
1D.
0E.
1B.
1C.
1;.
0<.
19.
1:.
12.
03.
10.
11.
1).
0*.
1'.
1(.
1~-
0!.
1|-
1}-
1u-
0v-
1s-
1t-
1l-
0m-
1j-
1k-
1c-
0d-
1a-
1b-
1Z-
0[-
1X-
1Y-
1Q-
0R-
1O-
1P-
1H-
0I-
1F-
1G-
1?-
0@-
1=-
1>-
16-
07-
14-
15-
1--
0.-
1+-
1,-
1$-
0%-
1"-
1#-
1y,
0z,
1w,
1x,
1p,
0q,
1n,
1o,
1g,
0h,
1e,
1f,
1^,
0_,
1\,
1],
1U,
0V,
1S,
1T,
1L,
0M,
1J,
1K,
1C,
0D,
1A,
1B,
1:,
0;,
18,
19,
11,
02,
1/,
10,
1(,
0),
1&,
1',
1}+
0~+
1{+
1|+
1t+
0u+
1r+
1s+
1k+
0l+
1i+
1j+
1b+
0c+
1`+
1a+
1Y+
0Z+
1W+
1X+
1P+
0Q+
1N+
1O+
1G+
0H+
1E+
1F+
1>+
0?+
1<+
1=+
15+
06+
13+
14+
1,+
0-+
1*+
1++
1#+
0$+
1!+
1"+
1x*
0y*
1v*
1w*
1o*
0p*
1m*
1n*
1f*
0g*
1d*
1e*
1]*
0^*
1[*
1\*
1T*
0U*
1R*
1S*
1K*
0L*
1I*
1J*
1B*
0C*
1@*
1A*
19*
0:*
17*
18*
10*
01*
1.*
1/*
1'*
0(*
1%*
1&*
1|)
0})
1z)
1{)
1s)
0t)
1q)
1r)
1j)
0k)
1h)
1i)
1a)
0b)
1_)
1`)
1X)
0Y)
1V)
1W)
1O)
0P)
1M)
1N)
1F)
12)
0G)
1D)
1*)
1E)
0~"
1")
1=)
0|"
1u(
1))
0c"
0#)
1~(
0>)
1;)
0t"
1t(
1()
11)
0a"
0s"
1!)
13)
1<)
0r"
b0 G"
b0 c(
b1111111111111111111111111111111111111111111111111111111111111111 g(
b1111111111111111111111111111111111111111111111111111111111111111 i(
b1111111111111111111111111111111111111111111111111111111111111111 k(
0Z"
0Y"
0l"
b0 Q"
0k"
b0 I"
b0 O"
b0 P"
0u"
0x(
1w(
0,)
1+)
b0 E"
b0 f(
b0 m(
b0 n(
05)
b11111111111111111111111111111111111111111111111111111111111111111 o(
14)
1%
b0 b
b0 K"
b0 3/
0V"
0h"
0q"
0U"
0S"
0g"
0e"
0p"
0n"
0o"
b0 H"
b0 `(
1s(
0r(
1')
0&)
10)
0/)
b10 g
b10 ("
b10 1"
b10 B"
16"
b0 /
b0 D"
b0 M"
b0 _(
b0 b(
b0 e(
b0 h(
0R"
0d"
0m"
0p(
0$)
0-)
08"
0<"
1,"
b10 &"
b10 +"
0t
b0 c
b0 5/
b0 d
b0 C"
b0 L"
b0 ^(
b0 a(
b0 d(
b0 j(
0."
b11110 *
0u
b11110 )
b11101 o
b11101 V/
b11101 Z/
b0 2
b0 </
b0 h2
b0 i2
b11010 A
b11010 8/
b1101 @
b1101 9/
b1101 ;/
b1101 d2
b0 G
b0 1/
b0 7/
b0 c2
1F
0]
b0 V
b0 6/
b0 C/
b0 O/
b0 Q
b0 =/
b0 S/
b0 R
b0 >/
b0 R/
b0 T
b0 Q/
b0 U
b0 P/
b11011 O
b11011 4/
b11011 P
b11011 U/
b0 _
b0 '"
b0 0"
b0 M/
0S
b11100 K
b11100 I/
b11100 Y/
1!
#250000
0!
#255000
b0 0
b0 l2
b11111 *
b11101 K
b11101 I/
b11101 Y/
b11100 O
b11100 4/
b11100 P
b11100 U/
b11011 A
b11011 8/
b0 @
b0 9/
b0 ;/
b0 d2
b0 ?
b0 0/
b0 :/
0>
b1101 2
b1101 </
b1101 h2
b1101 i2
b0 5
b0 f2
b11111 )
b11110 o
b11110 V/
b11110 Z/
1!
#260000
0!
#265000
b100000 *
b100000 )
b11111 o
b11111 V/
b11111 Z/
b0 2
b0 </
b0 h2
b0 i2
01
b11100 A
b11100 8/
b11101 O
b11101 4/
b11101 P
b11101 U/
b11110 K
b11110 I/
b11110 Y/
1!
#270000
0!
#275000
b100001 *
b11111 K
b11111 I/
b11111 Y/
b11110 O
b11110 4/
b11110 P
b11110 U/
b11101 A
b11101 8/
b100001 )
b100000 o
b100000 V/
b100000 Z/
1!
#280000
0!
#285000
b100010 *
b100010 )
b100001 o
b100001 V/
b100001 Z/
b11110 A
b11110 8/
b11111 O
b11111 4/
b11111 P
b11111 U/
b100000 K
b100000 I/
b100000 Y/
1!
#290000
0!
#295000
b100011 *
b100001 K
b100001 I/
b100001 Y/
b100000 O
b100000 4/
b100000 P
b100000 U/
b11111 A
b11111 8/
b100011 )
b100010 o
b100010 V/
b100010 Z/
1!
#300000
0!
#305000
b100100 *
b100100 )
b100011 o
b100011 V/
b100011 Z/
b100000 A
b100000 8/
b100001 O
b100001 4/
b100001 P
b100001 U/
b100010 K
b100010 I/
b100010 Y/
1!
#310000
0!
